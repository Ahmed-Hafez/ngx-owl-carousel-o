{"version":3,"sources":["ng://ngx-owl-carousel-o/lib/services/resize.service.ts","null","ng://ngx-owl-carousel-o/lib/carousel/owl-carousel-o-config.ts","ng://ngx-owl-carousel-o/lib/services/carousel.service.ts","ng://ngx-owl-carousel-o/lib/services/navigation.service.ts","ng://ngx-owl-carousel-o/lib/services/window-ref.service.ts","ng://ngx-owl-carousel-o/lib/services/document-ref.service.ts","ng://ngx-owl-carousel-o/lib/services/autoplay.service.ts","ng://ngx-owl-carousel-o/lib/carousel/carousel.component.ts","ng://ngx-owl-carousel-o/lib/carousel/stage/stage.component.ts","ng://ngx-owl-carousel-o/lib/carousel/carousel.module.ts"],"names":["ResizeService","eventManager","this","resizeSubject","Subject","addGlobalEventListener","onResize","bind","onLoaded","Object","defineProperty","prototype","asObservable","event","next","windowWidth","Injectable","EventManager","extendStatics","d","b","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","create","__assign","assign","t","s","i","n","arguments","length","call","apply","OwlCarouselOConfig","OwlOptionsMockedTypes","CarouselService","_this","items","rtl","isResponsive","isRefreshed","isLoaded","isLoading","isMouseDragable","isGrab","isTouchDragable","transform","transition","width","paddingL","paddingR","current","tags","initializing","animating","dragging","filter","run","cache","_items","relative","_current","id","margin","settings","grid","autoWidth","css","margin-left","margin-right","slidesData","forEach","slide","marginL","marginR","toFixed","widths","merge","iterator","_mergers","mergeFit","Math","min","_widths","clones","view","max","size","ceil","append","prepend","repeat","loop","rewind","push","normalize","unshift","_clones","map","active","cloned","concat","coordinates","previous","_coordinates","padding","stagePadding","abs","padding-left","padding-right","stageData","findIndex","minimum","maximum","reset","animate","begin","end","inner","outer","matches","center","result","element","_op","item","_invalidated","_states","getViewCurSettings","_viewSettingsShipper$","getInitializedState","_initializedCarousel$","getChangeState","_changeSettingsCarousel$","getChangedState","_changedSettingsCarousel$","getTranslatedState","_translatedCarousel$","getResizeState","_resizeCarousel$","getResizedState","_resizedCarousel$","getRefreshState","_refreshCarousel$","getRefreshedState","_refreshedCarousel$","setOptions","options","configOptions","checkedOptions","_validateOptions","_options","mockedTypes","key","this_1","_isNumeric","_validateItems","setRightOption","_isNumberOrBoolean","_isNumberOrString","isArray","isString_1","type","console","log","setCarouselWidth","_width","setup","carouselWidth","slides","setItems","_defineSlidesData","setViewportItemsN","_trigger","property","name","value","invalidate","viewport","overwrites","responsive","match","keys","Number","owlDOMData","_breakpoint","initialize","enter","mergeN","dataMerge","startPosition","refresh","mouseDrag","touchDrag","sendChanges","leave","navData","dotsData","_optionsLogic","update","_pipe","filteredPipe","all","is","dimension","Width","curWidth","prepareDragging","stage","transformArr","x","replace","split","y","speed","defineNewCoordsDrag","dragData","pull","delta","difference","pointer","start","pullDrag","finishDragging","dragObj","clickAttacher","currentSlideI","direction","dragEndSpeed","smartSpeed","closest","undefined","Date","getTime","time","coordinate","position","onTransitionEnd","state","part","_speed","_suppress","_release","m","reciprocalItemsWidth","elementWidth","slice","mergers","odd","even","index","v","multiplier","newPosition","_duration","from","to","factor","revert","distance","setTimeout","prev","_viewport","warn","content","tplRef","a","o","data","namespace","stateName","register","object","Type","tag","indexOf","events","_supress","originalEvent","window","touches","changedTouches","pageX","pageY","clientX","clientY","number","isNaN","parseFloat","first","second","NavigationService","carouselService","disabled","htmlText","dots","spyDataStreams","initializedCarousel$","pipe","tap","_updateNavPages","draw","changedSettings$","refreshedCarousel$","navMerge$","navSubscription","subscribe","_navData","navText","_dotsData","j","lower","upper","pages","dotsEach","slideBy","_pages","nav","innerContent","dotContent","showInnerContent","startI","splice","_updateNavButtons","_updateDots","curActiveDotI","page","pop","_getPosition","successor","standard","moveByDot","dotId","dot","dotsSpeed","WINDOW","InjectionToken","WindowRef","Error","BrowserWindowRef","_super","tslib_1.__extends","windowFactory","browserWindowRef","platformId","isPlatformBrowser","nativeWindow","browserWindowProvider","provide","useClass","windowProvider","useFactory","deps","PLATFORM_ID","WINDOW_PROVIDERS","DOCUMENT","DocumentRef","BrowserDocumentRef","document","documentFactory","browserDocumentRef","nativeDocument","browserDocumentProvider","documentProvider","DOCUMENT_PROVIDERS","AutoplayService","winRef","docRef","autoplay","play","_handleChangeObservable","autoplayMerge$","autoplaySubscription","timeout","_paused","_setAutoPlayInterval","_getNextTimeout","_timeout","clearTimeout","hidden","autoplaySpeed","autoplayTimeout","stop","pause","startPausing","autoplayHoverPause","startPlayingMouseLeave","startPlayingTouchEnd","Inject","args","nextId","CarouselSlideDirective","_dataMerge","isNumeric","Directive","selector","TemplateRef","Input","SlidesOutputData","CarouselComponent","el","resizeService","navigationService","autoplayService","EventEmitter","ngOnInit","carouselWindowWidth","nativeElement","querySelector","clientWidth","ngAfterContentChecked","ngAfterContentInit","toArray","_winResizeWatcher","ngOnDestroy","resizeSubscription","unsubscribe","_allObservSubscription","_viewCurSettings$","carouselLoaded","gatherTranslatedData","translated","emit","slidesOutputData","_carouselMerge$","onResize$","delay","responsiveRefreshRate","navSpeed","activeSlides","startPlayML","startPlayTE","Component","template","providers","ElementRef","ContentChildren","Output","StageComponent","zone","renderer","target","moving","ev","_oneMouseTouchMove","_onDragMove","_onDragEnd","listenerOneClick","listen","_drag","onMouseDown","owlDraggable","_onDragStart","onTouchStart","onTouchCancel","onDragStart","onSelectStart","_oneMoveSubsription","_oneDragMove$","_sendChanges","which","_prepareDragging","_pointer","listenerMouseUp","bindOnDragEnd","listenerTouchEnd","runOutsideAngular","listenerOneMouseMove","bindOneMouseTouchMove","listenerOneTouchMove","_difference","_is","listenerMouseMove","bindOnDragMove","listenerTouchMove","preventDefault","_enter","stageOrExit","_animate","setStyle","children","_finishDragging","_oneClickHandler","firstC","NgZone","Renderer2","HostListener","CarouselModule","NgModule","imports","CommonModule","declarations","exports"],"mappings":"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","sourcesContent":["import { EventManager } from '@angular/platform-browser';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class ResizeService {\r\n  /**\r\n   * Width of window\r\n   */\r\n  public windowWidth: any;\r\n\r\n  /**\r\n   * Makes resizeSubject become Observable\r\n   * @returns Observable of resizeSubject\r\n   */\r\n  get onResize$(): Observable<Window> {\r\n    return this.resizeSubject.asObservable();\r\n  }\r\n\r\n  /**\r\n   * Subject of 'resize' event\r\n   */\r\n  private resizeSubject: Subject<Window>;\r\n\r\n  constructor(private eventManager: EventManager) {\r\n    this.resizeSubject = new Subject();\r\n    this.eventManager.addGlobalEventListener(\r\n      'window',\r\n      'resize',\r\n      this.onResize.bind(this)\r\n    );\r\n    this.eventManager.addGlobalEventListener(\r\n      'window',\r\n      'onload',\r\n      this.onLoaded.bind(this)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Handler of 'resize' event. Passes data throw resizeSubject\r\n   * @param event Event Object of 'resize' event\r\n   */\r\n  private onResize(event: UIEvent) {\r\n    this.resizeSubject.next(<Window>event.target);\r\n  }\r\n\r\n  /**\r\n   * Handler of 'onload' event. Defines the width of window\r\n   * @param event Event Object of 'onload' event\r\n   */\r\n  private onLoaded(event: UIEvent) {\r\n    this.windowWidth = <Window>event.target;\r\n  }\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { OwlOptions } from \"../models/owl-options.model\";\n\nexport class OwlCarouselOConfig implements OwlOptions {\n  items = 3;\n  loop = false;\n  center = false;\n  rewind = false;\n\n  mouseDrag = true;\n  touchDrag = true;\n  pullDrag = true;\n  freeDrag = false;\n\n  margin = 0;\n  stagePadding = 0;\n\n  merge = false;\n  mergeFit = true;\n  autoWidth = false;\n\n  startPosition = 0;\n  rtl = false;\n\n  smartSpeed = 250;\n  fluidSpeed = false;\n  dragEndSpeed = false;\n\n  responsive = {};\n  responsiveRefreshRate = 200;\n\n  // defaults to Navigation\n  nav = false;\n  navText = [ 'prev', 'next' ];\n  navSpeed = false;\n  slideBy = 1; // stage moves on 1 width of slide; if slideBy = 2, stage moves on 2 widths of slide\n  dots = true;\n  dotsEach = false;\n  dotsData = false;\n  dotsSpeed = false;\n\n  // defaults to Autoplay\n  autoplay: false;\n  autoplayTimeout: 5000;\n  autoplayHoverPause: false;\n  autoplaySpeed: false;\n  constructor() { }\n}\n\n// although we can't read types from OwlOptions in javascript as props have value undefined and types are used for validating inputs\n// class below is copy of OwlOptions but its all props have string value showing certain type;\n// this is class is being used just in method _validateOptions of CarouselService;\nexport class OwlOptionsMockedTypes {\n  items = 'number';\n  loop = 'boolean';\n  center = 'boolean';\n  rewind = 'boolean';\n\n  mouseDrag = 'boolean';\n  touchDrag = 'boolean';\n  pullDrag = 'boolean';\n  freeDrag = 'boolean';\n\n  margin = 'number';\n  stagePadding = 'number';\n\n  merge = 'boolean';\n  mergeFit = 'boolean';\n  autoWidth = 'boolean';\n\n  startPosition = 'number';\n  rtl = 'boolean';\n\n  smartSpeed = 'number';\n  fluidSpeed = 'boolean';\n  dragEndSpeed = 'number|boolean';\n\n  responsive = {};\n  responsiveRefreshRate = 'number';\n\n  // defaults to Navigation\n  nav = 'boolean';\n  navText = 'string[]';\n  navSpeed = 'number|boolean';\n  slideBy = 'number|string'; // stage moves on 1 width of slide; if slideBy = 2, stage moves on 2 widths of slide\n  dots = 'boolean';\n  dotsEach = 'number|boolean';\n  dotsData = 'boolean';\n  dotsSpeed = 'number|boolean';\n\n  // defaults to Autoplay\n  autoplay: 'boolean';\n  autoplayTimeout: 'number';\n  autoplayHoverPause: 'boolean';\n  autoplaySpeed: 'number|boolean';\n  constructor() { }\n}","\r\nimport { StageData } from '../models/stage-data.model';\r\n\r\nimport { OwlDOMData } from '../models/owlDOM-data.model';\r\n\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { CarouselSlideDirective } from '../carousel/carousel.module';\r\nimport { SliderModel } from '../models/slider.model';\r\nimport { Subject, Observable } from 'rxjs';\r\nimport { OwlCarouselOConfig, OwlOptionsMockedTypes } from '../carousel/owl-carousel-o-config';\r\nimport { OwlOptions } from '../models/owl-options.model';\r\n\r\nimport { NavData, DotsData } from '../models/navigation-data.models';\r\n\r\n/**\r\n * Current state information and their tags.\r\n */\r\nexport class States {\r\n  current: {};\r\n  tags: {\r\n    [key: string]: string[];\r\n  };\r\n}\r\n\r\n/**\r\n * Enumeration for types.\r\n * @enum {String}\r\n */\r\nexport enum Type {\r\n\tEvent = 'event',\r\n\tState = 'state'\r\n};\r\n\r\n/**\r\n * Enumeration for width.\r\n * @enum {String}\r\n */\r\nexport enum Width {\r\n\tDefault = 'default',\r\n\tInner = 'inner',\r\n\tOuter = 'outer'\r\n};\r\n\r\n/**\r\n * Model for coords of .owl-stage\r\n */\r\nexport class Coords {\r\n\tx: number;\r\n\ty: number;\r\n}\r\n\r\n/**\r\n * Model for all current data of carousel\r\n */\r\nexport class CarouselCurrentData {\r\n\towlDOMData: OwlDOMData;\r\n\tstageData: StageData;\r\n\tslidesData: SliderModel[];\r\n\tnavData: NavData;\r\n\tdotsData: DotsData;\r\n}\r\n\r\n@Injectable()\r\nexport class CarouselService {\r\n\t/**\r\n   * Subject for passing data needed for managing View\r\n   */\r\n\tprivate _viewSettingsShipper$ = new Subject<CarouselCurrentData>();\r\n\t/**\r\n   * Subject for notification when the carousel got initializes\r\n   */\r\n\tprivate _initializedCarousel$ = new Subject<string>();\r\n\r\n\t/**\r\n   * Subject for notification when the carousel's settings start changinf\r\n   */\r\n\tprivate _changeSettingsCarousel$ = new Subject<any>();\r\n\r\n\t/**\r\n   * Subject for notification when the carousel's settings have changed\r\n   */\r\n\tprivate _changedSettingsCarousel$ = new Subject<any>();\r\n\t/**\r\n   * Subject for notification when the carousel stopped translating or moving\r\n   */\r\n\tprivate _translatedCarousel$ = new Subject<string>();\r\n\t/**\r\n   * Subject for notification when the carousel's rebuilding caused by 'resize' event starts\r\n   */\r\n\tprivate _resizeCarousel$ = new Subject<string>();\r\n\t/**\r\n   * Subject for notification  when the carousel's rebuilding caused by 'resize' event is ended\r\n   */\r\n\tprivate _resizedCarousel$ = new Subject<string>();\r\n\t/**\r\n   * Subject for notification when the refresh of carousel starts\r\n   */\r\n\tprivate _refreshCarousel$ = new Subject<string>();\r\n\t/**\r\n   * Subject for notification when the refresh of carousel is ended\r\n   */\r\n\tprivate _refreshedCarousel$ = new Subject<string>();\r\n\r\n  /**\r\n   * Current settings for the carousel.\r\n   */\r\n  settings: OwlOptions = {\r\n\t\titems: 0\r\n\t};\r\n\r\n\t/**\r\n   * Initial data for setting classes to element .owl-carousel\r\n   */\r\n\towlDOMData: OwlDOMData = {\r\n\t\trtl: false,\r\n\t\tisResponsive: false,\r\n\t\tisRefreshed: false,\r\n\t\tisLoaded: false,\r\n\t\tisLoading: false,\r\n\t\tisMouseDragable: false,\r\n\t\tisGrab: false,\r\n\t\tisTouchDragable: false\r\n\t};\r\n\r\n\t/**\r\n   * Initial data of .owl-stage\r\n   */\r\n\tstageData: StageData = {\r\n\t\ttransform: 'translate3d(0px,0px,0px)',\r\n\t\ttransition: '0s',\r\n\t\twidth: 0,\r\n\t\tpaddingL: 0,\r\n\t\tpaddingR: 0\r\n\t};\r\n\r\n\t/**\r\n\t *  Data of every slide\r\n\t */\r\n\tslidesData: SliderModel[];\r\n\r\n\t/**\r\n\t * Data of navigation block\r\n\t */\r\n\tnavData: NavData;\r\n\r\n\t/**\r\n\t * Data of dots block\r\n\t */\r\n\tdotsData: DotsData;\r\n\r\n\t/**\r\n\t * Carousel width\r\n\t */\r\n\tprivate _width: number;\r\n\r\n\t/**\r\n\t * All real items.\r\n\t */\r\n\tprivate _items: CarouselSlideDirective[] = []; // is equal to this.slides\r\n\r\n\t/**\r\n   * Array with width of every slide.\r\n   */\r\n  private _widths: any[] = [];\r\n\r\n\t/**\r\n   * Currently suppressed events to prevent them from beeing retriggered.\r\n   */\r\n\tprivate _supress: any = {};\r\n\r\n  /**\r\n   * References to the running plugins of this carousel.\r\n   */\r\n\tprivate _plugins: any = {};\r\n\r\n\t/**\r\n   * Absolute current position.\r\n   */\r\n\tprivate _current: number | null = null;\r\n\r\n\t/**\r\n   * All cloned items.\r\n   */\r\n\tprivate _clones: any[] = [];\r\n\r\n  /**\r\n   * Merge values of all items.\r\n   * @todo Maybe this could be part of a plugin.\r\n   */\r\n\treadonly _mergers: any[] = [];\r\n\r\n\t/**\r\n   * Animation speed in milliseconds.\r\n   */\r\n\tprivate _speed: number | null = null;\r\n\r\n\t/**\r\n   * Coordinates of all items in pixel.\r\n   * @todo The name of this member is missleading.\r\n   */\r\n\tprivate _coordinates: number[] = [];\r\n\r\n\t/**\r\n   * Current breakpoint.\r\n   * @todo Real media queries would be nice.\r\n   */\r\n  private _breakpoint: any = null;\r\n\r\n\t/**\r\n\t * Current options set by the caller including defaults.\r\n\t */\r\n\t_options: OwlOptions = {};\r\n\r\n  /**\r\n   * Invalidated parts within the update process.\r\n   */\r\n  private _invalidated: any = {};\r\n\r\n  // Is needed for tests\r\n  get invalidated() {\r\n    return this._invalidated;\r\n  }\r\n  /**\r\n   * Current state information and their tags.\r\n   */\r\n  private _states: States = {\r\n    current: {},\r\n    tags: {\r\n      initializing: ['busy'],\r\n      animating: ['busy'],\r\n      dragging: ['interacting']\r\n    }\r\n  };\r\n\r\n  // is needed for tests\r\n  get states() {\r\n    return this._states;\r\n\t}\r\n\r\n\t/**\r\n \t * Ordered list of workers for the update process.\r\n   */\r\n  private _pipe: any[] = [\r\n    // {\r\n    //   filter: ['width', 'settings'],\r\n    //   run: () => {\r\n    //     this._width = this.carouselWindowWidth;\r\n    //   }\r\n    // },\r\n    {\r\n      filter: ['width', 'items', 'settings'],\r\n      run: cache => {\r\n        cache.current = this._items && this._items[this.relative(this._current)].id;\r\n      }\r\n    },\r\n    // {\r\n    //   filter: ['items', 'settings'],\r\n    //   run: function() {\r\n    //     // this.$stage.children('.cloned').remove();\r\n    //   }\r\n\t\t// },\r\n\t\t {\r\n      filter: [ 'width', 'items', 'settings' ],\r\n      run: (cache) => {\r\n        const margin = this.settings.margin || '',\r\n          grid = !this.settings.autoWidth,\r\n          rtl = this.settings.rtl,\r\n          css = {\r\n            'margin-left': rtl ? margin : '',\r\n            'margin-right': rtl ? '' : margin\r\n          };\r\n\r\n        if(!grid) {\r\n\t\t\t\t\tthis.slidesData.forEach(slide => {\r\n\t\t\t\t\t\tslide.marginL = css['margin-left'];\r\n\t\t\t\t\t\tslide.marginR = css['margin-right'];\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n        cache.css = css;\r\n      }\r\n    }, {\r\n      filter: [ 'width', 'items', 'settings' ],\r\n      run: (cache) => {\r\n        const width: any = +(this.width() / this.settings.items).toFixed(3) - this.settings.margin,\r\n          grid = !this.settings.autoWidth,\r\n          widths = [];\r\n\t\t\t\tlet merge = null,\r\n\t\t\t\t\t\titerator = this._items.length;\r\n\r\n        cache.items = {\r\n          merge: false,\r\n          width: width\r\n        };\r\n\r\n        while (iterator--) {\r\n          merge = this._mergers[iterator];\r\n          merge = this.settings.mergeFit && Math.min(merge, this.settings.items) || merge;\r\n          cache.items.merge = merge > 1 || cache.items.merge;\r\n\r\n          widths[iterator] = !grid ? this._items[iterator].width ? this._items[iterator].width : width : width * merge;\r\n        }\r\n\r\n\t\t\t\tthis._widths = widths;\r\n\r\n\t\t\t\tthis.slidesData.forEach((slide, i) => {\r\n\t\t\t\t\tslide.width = this._widths[i];\r\n\t\t\t\t\tslide.marginR = cache.css['margin-right'];\r\n\t\t\t\t\tslide.marginL = cache.css['margin-left'];\r\n\t\t\t\t});\r\n      }\r\n    }, {\r\n      filter: [ 'items', 'settings' ],\r\n      run: () => {\r\n        const clones: any[] = [],\r\n          items: CarouselSlideDirective[] = this._items,\r\n          settings: any = this.settings,\r\n          // TODO: Should be computed from number of min width items in stage\r\n          view = Math.max(settings.items * 2, 4),\r\n          size = Math.ceil(items.length / 2) * 2;\r\n\t\t\t\tlet  append: any[] = [],\r\n          prepend: any[] = [],\r\n\t\t\t\t\trepeat = settings.loop && items.length ? settings.rewind ? view : Math.max(view, size) : 0;\r\n\r\n        repeat /= 2;\r\n\r\n        while (repeat--) {\r\n          // Switch to only using appended clones\r\n          clones.push(this.normalize(clones.length / 2, true));\r\n          append.push({ ...this.slidesData[clones[clones.length - 1]]});\r\n\t\t\t\t\tclones.push(this.normalize(items.length - 1 - (clones.length - 1) / 2, true));\r\n\t\t\t\t\tprepend.unshift({ ...this.slidesData[clones[clones.length - 1]]});\r\n        }\r\n\r\n\t\t\t\tthis._clones = clones;\r\n\r\n\t\t\t\tappend = append.map(slide => {\r\n\t\t\t\t\tslide.id = `cloned-${slide.id}`;\r\n\t\t\t\t\tslide.active = false;\r\n\t\t\t\t\tslide.cloned = true;\r\n\t\t\t\t\treturn slide;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tprepend = prepend.map(slide => {\r\n\t\t\t\t\tslide.id = `cloned-${slide.id}`;\r\n\t\t\t\t\tslide.active = false;\r\n\t\t\t\t\tslide.cloned = true;\r\n\t\t\t\t\treturn slide;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.slidesData = prepend.concat(this.slidesData).concat(append);\r\n      }\r\n    }, {\r\n      filter: [ 'width', 'items', 'settings' ],\r\n      run: () => {\r\n        const rtl = this.settings.rtl ? 1 : -1,\r\n          size = this._clones.length + this._items.length,\r\n          coordinates = [];\r\n        let iterator = -1,\r\n          previous = 0,\r\n          current = 0;\r\n\r\n        while (++iterator < size) {\r\n          previous = coordinates[iterator - 1] || 0;\r\n          current = this._widths[this.relative(iterator)] + this.settings.margin;\r\n          coordinates.push(previous + current * rtl);\r\n        }\r\n\r\n        this._coordinates = coordinates;\r\n      }\r\n    }, {\r\n      filter: [ 'width', 'items', 'settings' ],\r\n      run: () => {\r\n        const padding = this.settings.stagePadding,\r\n          coordinates = this._coordinates,\r\n          css = {\r\n            'width': Math.ceil(Math.abs(coordinates[coordinates.length - 1])) + padding * 2,\r\n            'padding-left': padding || '',\r\n            'padding-right': padding || ''\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\tthis.stageData.width = css.width; // use this property in *ngIf directive for .owl-stage element\r\n\t\t\t\tthis.stageData.paddingL = css['padding-left'];\r\n\t\t\t\tthis.stageData.paddingR = css['padding-right'];\r\n      }\r\n    }, {\r\n    //   filter: [ 'width', 'items', 'settings' ],\r\n    //   run: cache => {\r\n\t\t// \t\t// this method sets the width for every slide, but I set it in different way earlier\r\n\t\t// \t\tconst grid = !this.settings.autoWidth,\r\n\t\t// \t\titems = this.$stage.children(); // use this.slidesData\r\n    //     let iterator = this._coordinates.length;\r\n\r\n    //     if (grid && cache.items.merge) {\r\n    //       while (iterator--) {\r\n    //         cache.css.width = this._widths[this.relative(iterator)];\r\n    //         items.eq(iterator).css(cache.css);\r\n    //       }\r\n    //     } else if (grid) {\r\n    //       cache.css.width = cache.items.width;\r\n    //       items.css(cache.css);\r\n    //     }\r\n    //   }\r\n    // }, {\r\n    //   filter: [ 'items' ],\r\n    //   run: function() {\r\n    //     this._coordinates.length < 1 && this.$stage.removeAttr('style');\r\n    //   }\r\n    // }, {\r\n      filter: [ 'width', 'items', 'settings' ],\r\n      run: cache => {\r\n        let current = cache.current ? this.slidesData.findIndex(slide => slide.id === cache.current) : 0;\r\n       \tcurrent = Math.max(this.minimum(), Math.min(this.maximum(), current));\r\n        this.reset(current);\r\n      }\r\n    }, {\r\n      filter: [ 'position' ],\r\n      run: () => {\r\n        this.animate(this.coordinates(this._current));\r\n      }\r\n    }, {\r\n      filter: [ 'width', 'position', 'items', 'settings' ],\r\n      run: () => {\r\n        const rtl = this.settings.rtl ? 1 : -1,\r\n\t\t\t\t\tpadding = this.settings.stagePadding * 2,\r\n\t\t\t\t\tmatches = [];\r\n\t\t\t\tlet begin, end, inner, outer, i, n;\r\n\r\n\t\t\t\tbegin = this.coordinates(this.current());\r\n\t\t\t\tif (typeof begin === 'number' ) {\r\n\t\t\t\t\tbegin += padding;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbegin = 0;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tend = begin + this.width() * rtl;\r\n\r\n\t\t\t\tif (rtl === -1 && this.settings.center) {\r\n\t\t\t\t\tconst result =\tthis._coordinates.filter(element => {\r\n\t\t\t\t\t\treturn this.settings.items % 2 === 1 ? element >= begin : element > begin;\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbegin = result.length ? result[result.length - 1] : begin;\r\n\t\t\t\t}\r\n\r\n        for (i = 0, n = this._coordinates.length; i < n; i++) {\r\n          inner = this.settings.rtl ? Math.ceil(this._coordinates[i - 1] || 0) : Math.ceil(this._coordinates[i - 1] || 0);\r\n\t\t\t\t\touter = Math.ceil(Math.abs(this._coordinates[i]) + padding * rtl);\r\n\r\n          if ((this._op(inner, '<=', begin) && (this._op(inner, '>', end)))\r\n            || (this._op(outer, '<', begin) && this._op(outer, '>', end))) {\r\n            matches.push(i);\r\n          }\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.slidesData.forEach(slide => {\r\n\t\t\t\t\tslide.active = false;\r\n\t\t\t\t\treturn slide;\r\n\t\t\t\t});\r\n\t\t\t\tmatches.forEach(item => {\r\n\t\t\t\t\tthis.slidesData[item].active = true;\r\n\t\t\t\t});\r\n\r\n        if (this.settings.center) {\r\n\t\t\t\t\tthis.slidesData.forEach(slide => {\r\n\t\t\t\t\t\tslide.center = false;\r\n\t\t\t\t\t\treturn slide;\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis.slidesData[this.current()].center = true;\r\n        }\r\n      }\r\n    }\r\n  ];\r\n\r\n\tconstructor() { }\r\n\r\n\t/**\r\n\t * Makes _viewSettingsShipper$ Subject become Observable\r\n\t * @returns Observable of _viewSettingsShipper$ Subject\r\n\t */\r\n\tgetViewCurSettings(): Observable<CarouselCurrentData> {\r\n\t\treturn this._viewSettingsShipper$.asObservable();\r\n\t}\r\n\r\n\t/**\r\n\t * Makes _initializedCarousel$ Subject become Observable\r\n\t * @returns Observable of _initializedCarousel$ Subject\r\n\t */\r\n\tgetInitializedState(): Observable<string> {\r\n\t\treturn this._initializedCarousel$.asObservable()\r\n\t}\r\n\r\n\t/**\r\n\t * Makes _changeSettingsCarousel$ Subject become Observable\r\n\t * @returns Observable of _changeSettingsCarousel$ Subject\r\n\t */\r\n\tgetChangeState(): Observable<any> {\r\n\t\treturn this._changeSettingsCarousel$.asObservable();\r\n\t}\r\n\r\n\t/**\r\n\t * Makes _changedSettingsCarousel$ Subject become Observable\r\n\t * @returns Observable of _changedSettingsCarousel$ Subject\r\n\t */\r\n\tgetChangedState(): Observable<any> {\r\n\t\treturn this._changedSettingsCarousel$.asObservable();\r\n\t}\r\n\r\n\t/**\r\n\t * Makes _translatedCarousel$ Subject become Observable\r\n\t * @returns Observable of _translatedCarousel$ Subject\r\n\t */\r\n\tgetTranslatedState(): Observable<string> {\r\n\t\treturn this._translatedCarousel$.asObservable();\r\n\t}\r\n\r\n\t/**\r\n\t * Makes _resizeCarousel$ Subject become Observable\r\n\t * @returns Observable of _resizeCarousel$ Subject\r\n\t */\r\n\tgetResizeState(): Observable<string> {\r\n\t\treturn this._resizeCarousel$.asObservable();\r\n\t}\r\n\r\n\t/**\r\n\t * Makes _resizedCarousel$ Subject become Observable\r\n\t * @returns Observable of _resizedCarousel$ Subject\r\n\t */\r\n\tgetResizedState(): Observable<string> {\r\n\t\treturn this._resizedCarousel$.asObservable();\r\n\t}\r\n\r\n\t/**\r\n\t * Makes _refreshCarousel$ Subject become Observable\r\n\t * @returns Observable of _refreshCarousel$ Subject\r\n\t */\r\n\tgetRefreshState(): Observable<string> {\r\n\t\treturn this._refreshCarousel$.asObservable();\r\n\t}\r\n\r\n\t/**\r\n\t * Makes _refreshedCarousel$ Subject become Observable\r\n\t * @returns Observable of _refreshedCarousel$ Subject\r\n\t */\r\n\tgetRefreshedState(): Observable<string> {\r\n\t\treturn this._refreshedCarousel$.asObservable();\r\n\t}\r\n\r\n\t/**\r\n\t * Setups custom options expanding default options\r\n\t * @param options custom options\r\n\t */\r\n\tsetOptions(options: OwlOptions) {\r\n\t\tconst configOptions: OwlOptions = new OwlCarouselOConfig();\r\n\t\tconst checkedOptions: OwlOptions = this._validateOptions(options, configOptions);\r\n\t\tthis._options = { ...configOptions, ...checkedOptions};\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether user's option are set properly. Cheking is based on typings;\r\n\t * @param options options set by user\r\n\t * @param configOptions default options\r\n\t * @returns checked and modified (if it's needed) user's options\r\n\t *\r\n\t * Notes:\r\n\t * \t- if user set option with wrong type, it'll be written in console\r\n\t */\r\n\tprivate _validateOptions(options: OwlOptions, configOptions: OwlOptions): OwlOptions {\r\n\t\tconst checkedOptions: OwlOptions = { ...options};\r\n\t\tconst mockedTypes = new OwlOptionsMockedTypes();\r\n\r\n\t\tfor (const key in checkedOptions) {\r\n\t\t\tif (checkedOptions.hasOwnProperty(key)) {\r\n\r\n\t\t\t\t// condition could be shortened but it gets harder for understanding\r\n\t\t\t\tif (mockedTypes[key] === 'number') {\r\n\t\t\t\t\tif (this._isNumeric(checkedOptions[key])) {\r\n\t\t\t\t\t\tcheckedOptions[key] = +checkedOptions[key];\r\n\t\t\t\t\t\tcheckedOptions[key] = key === 'items' ? this._validateItems(checkedOptions[key]) : checkedOptions[key];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcheckedOptions[key] = setRightOption(mockedTypes[key], key);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (mockedTypes[key] === 'boolean' && typeof checkedOptions[key] !== 'boolean') {\r\n\t\t\t\t\tcheckedOptions[key] = setRightOption(mockedTypes[key], key);\r\n\t\t\t\t} else if (mockedTypes[key] === 'number|boolean' && !this._isNumberOrBoolean(checkedOptions[key])) {\r\n\t\t\t\t\tcheckedOptions[key] = setRightOption(mockedTypes[key], key);\r\n\t\t\t\t} else if (mockedTypes[key] === 'number|string' && !this._isNumberOrString(checkedOptions[key])) {\r\n\t\t\t\t\tcheckedOptions[key] = setRightOption(mockedTypes[key], key);\r\n\t\t\t\t} else if (mockedTypes[key] === 'string[]') {\r\n\t\t\t\t\tif (Array.isArray(checkedOptions[key])) {\r\n\t\t\t\t\t\tlet isString = false;\r\n\t\t\t\t\t\tcheckedOptions[key].forEach(element => {\r\n\t\t\t\t\t\t\tisString = typeof element === 'string' ? true : false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tif (!isString) { checkedOptions[key] = setRightOption(mockedTypes[key], key) };\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcheckedOptions[key] = setRightOption(mockedTypes[key], key);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction setRightOption(type: string, key: any): any {\r\n\t\t\tconsole.log(`options.${key} must be type of ${type}; ${key}=${options[key]} skipped to defaults: ${key}=${configOptions[key]}`);\r\n\t\t\treturn configOptions[key];\r\n\t\t}\r\n\r\n\t\treturn checkedOptions;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks option items set by user and if it bigger than number of slides then returns number of slides\r\n\t * @param items option items set by user\r\n\t * @returns right number of items\r\n\t */\r\n\tprivate _validateItems(items: number): number {\r\n\t\tlet result: number;\r\n\t\tif (items >= this._items.length) {\r\n\t\t\tresult = this._items.length ;\r\n\t\t\tconsole.log('option \\'items\\' in your options is bigger than number of slides; This option is updated to current number of slides and navigation got disabled');\r\n\t\t} else {\r\n\t\t\tresult = items;\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * Set current width of carousel\r\n\t * @param width width of carousel Window\r\n\t */\r\n\tsetCarouselWidth(width: number) {\r\n\t\tthis._width = width;\r\n\t}\r\n\r\n  /**\r\n\t * Setups the current settings.\r\n\t * @todo Remove responsive classes. Why should adaptive designs be brought into IE8?\r\n\t * @todo Support for media queries by using `matchMedia` would be nice.\r\n\t * @param carouselWidth width of carousel\r\n\t * @param slides array of slides\r\n\t * @param options options set by user\r\n\t */\r\n  setup(carouselWidth: number, slides: CarouselSlideDirective[], options: OwlOptions) {\r\n\t\tthis.setCarouselWidth(carouselWidth);\r\n\t\tthis.setItems(slides);\r\n\t\tthis._defineSlidesData();\r\n\t\tthis.setOptions(options);\r\n\r\n\t\tthis.settings = { ...this._options};\r\n\r\n\t\tthis.setViewportItemsN();\r\n\r\n\t\tthis._trigger('change', { property: { name: 'settings', value: this.settings } });\r\n\t\tthis.invalidate('settings'); // must be call of this function;\r\n\t\tthis._trigger('changed', { property: { name: 'settings', value: this.settings } });\r\n\t}\r\n\r\n\t/**\r\n\t * Set number of items for current viewport\r\n\t */\r\n\tsetViewportItemsN() {\r\n\t\tconst viewport = this._width,\r\n\t\t\toverwrites = this._options.responsive;\r\n\t\tlet\tmatch = -1;\r\n\r\n\t\tif (!Object.keys(overwrites).length) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tfor (const key in overwrites) {\r\n\t\t\tif (overwrites.hasOwnProperty(key)) {\r\n\t\t\t\tif (+key <= viewport && +key > match) {\r\n\t\t\t\t\tmatch = Number(key);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.settings = { ...this.settings, items: this._validateItems(overwrites[match].items)};\r\n\t\t// if (typeof this.settings.stagePadding === 'function') {\r\n\t\t// \tthis.settings.stagePadding = this.settings.stagePadding();\r\n\t\t// }\r\n\t\tdelete this.settings.responsive;\r\n\t\tthis.owlDOMData.isResponsive = true;\r\n\t\tthis._breakpoint = match;\r\n\r\n\t\tthis.invalidate('settings');\r\n\t}\r\n\r\n\t/**\r\n\t * Initializes the carousel.\r\n\t * @param slides array of CarouselSlideDirective\r\n\t */\r\n  initialize(slides: CarouselSlideDirective[]) {\r\n\t\tthis.enter('initializing');\r\n\t\t// this.trigger('initialize');\r\n\r\n\t\tthis.owlDOMData.rtl = this.settings.rtl;\r\n\r\n\t\tslides.forEach(item => {\r\n\t\t\tconst mergeN: number = this.settings.merge ? item.dataMerge : 1;\r\n\t\t\tthis._mergers.push(mergeN);\r\n\t\t});\r\n\r\n\t\tthis.reset(this._isNumeric(this.settings.startPosition) ? this.settings.startPosition : 0);\r\n\r\n\t\tthis.invalidate('items');\r\n\t\tthis.refresh();\r\n\r\n\t\tthis.owlDOMData.isLoaded = true;\r\n\t\tthis.owlDOMData.isMouseDragable = this.settings.mouseDrag;\r\n\t\tthis.owlDOMData.isTouchDragable = this.settings.touchDrag;\r\n\r\n\t\tthis.sendChanges();\r\n\r\n\t\tthis.leave('initializing');\r\n\t\tthis._trigger('initialized');\r\n\t};\r\n\r\n\t/**\r\n\t * Sends all data needed for View\r\n\t */\r\n\tsendChanges() {\r\n\t\tthis._viewSettingsShipper$.next({\r\n\t\t\towlDOMData: this.owlDOMData,\r\n\t\t\tstageData: this.stageData,\r\n\t\t\tslidesData: this.slidesData,\r\n\t\t\tnavData: this.navData,\r\n\t\t\tdotsData: this.dotsData\r\n\t\t});\r\n\t}\r\n\r\n\r\n  /**\r\n\t * Updates option logic if necessery\r\n\t */\r\n  private _optionsLogic() {\r\n\t\tif (this.settings.autoWidth) {\r\n\t\t\tthis.settings.stagePadding = 0;\r\n\t\t\tthis.settings.merge = false;\r\n\t\t}\r\n\t}\r\n\r\n  /**\r\n   * Updates the view\r\n   */\r\n  update() {\r\n    let i = 0;\r\n    const n = this._pipe.length,\r\n      filter = item => this._invalidated[item],\r\n\t\t\tcache = {};\r\n\r\n    while (i < n) {\r\n      const filteredPipe = this._pipe[i].filter.filter(filter);\r\n      if (this._invalidated.all || filteredPipe.length > 0) {\r\n\t\t\t\tthis._pipe[i].run(cache);\r\n      }\r\n      i++;\r\n\t\t}\r\n\r\n\t\tthis.sendChanges();\r\n\r\n    this._invalidated = {};\r\n\r\n    if (!this.is('valid')) {\r\n      this.enter('valid');\r\n    }\r\n  }\r\n\r\n  /**\r\n\t * Gets the width of the view.\r\n\t * @param [dimension=Width.Default] The dimension to return\r\n\t * @returns The width of the view in pixel.\r\n\t */\r\n  width(dimension?: Width): number {\r\n\t\tdimension = dimension || Width.Default;\r\n\t\tswitch (dimension) {\r\n\t\t\tcase Width.Inner:\r\n\t\t\tcase Width.Outer:\r\n\t\t\t\treturn this._width;\r\n\t\t\tdefault:\r\n\t\t\t\treturn this._width - this.settings.stagePadding * 2 + this.settings.margin;\r\n\t\t}\r\n\t}\r\n\r\n  /**\r\n\t * Refreshes the carousel primarily for adaptive purposes.\r\n\t */\r\n  refresh() {\r\n\t\tthis.enter('refreshing');\r\n\t\tthis._trigger('refresh');\r\n\t\tthis._defineSlidesData();\r\n\t\tthis.setViewportItemsN();\r\n\r\n\t\tthis._optionsLogic();\r\n\r\n\t\t// this.$element.addClass(this.options.refreshClass);\r\n\r\n\t\tthis.update();\r\n\r\n\t\t// this.$element.removeClass(this.options.refreshClass);\r\n\r\n\t\tthis.leave('refreshing');\r\n\t\tthis._trigger('refreshed');\r\n\t }\r\n\r\n  /**\r\n\t * Checks window `resize` event.\r\n\t * @param curWidth width of .owl-carousel\r\n\t */\r\n  onResize(curWidth: number) {\r\n\t\tif (!this._items.length) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tthis.setCarouselWidth(curWidth);\r\n\r\n\t\tthis.enter('resizing');\r\n\r\n\t\t// if (this.trigger('resize').isDefaultPrevented()) {\r\n\t\t// \tthis.leave('resizing');\r\n\t\t// \treturn false;\r\n\t\t// }\r\n\t\tthis._trigger('resize');\r\n\t\tthis.invalidate('width');\r\n\r\n\t\tthis.refresh();\r\n\r\n\t\tthis.leave('resizing');\r\n\t\tthis._trigger('resized');\r\n\t}\r\n\r\n  /**\r\n\t * Prepares data for dragging carousel. It starts after firing `touchstart` and `mousedown` events.\r\n\t * @todo Horizontal swipe threshold as option\r\n\t * @todo #261\r\n\t * @param event - The event arguments.\r\n\t * @returns stage - object with 'x' and 'y' coordinates of .owl-stage\r\n\t */\r\n  prepareDragging(event: any): Coords {\r\n\t\tlet stage: Coords = null,\r\n\t\t\t\ttransformArr: string[];\r\n\r\n\t\t// could be 5 commented lines below; However there's stage transform in stageData and in updates after each move of stage\r\n    // stage = getComputedStyle(this.el.nativeElement).transform.replace(/.*\\(|\\)| /g, '').split(',');\r\n    // stage = {\r\n    //   x: stage[stage.length === 16 ? 12 : 4],\r\n    //   y: stage[stage.length === 16 ? 13 : 5]\r\n\t\t// };\r\n\r\n\t\ttransformArr = this.stageData.transform.replace(/.*\\(|\\)| |[^,-\\d]\\w|\\)/g, '').split(',');\r\n    stage = {\r\n      x: +transformArr[0],\r\n      y: +transformArr[1]\r\n    };\r\n\r\n\t\tif (this.is('animating')) {\r\n\t\t\tthis.invalidate('position');\r\n    }\r\n\r\n    if (event.type === 'mousedown') {\r\n      this.owlDOMData.isGrab = true;\r\n    }\r\n\r\n\t\tthis.speed(0);\r\n\t\treturn stage;\r\n\t}\r\n\r\n  /**\r\n\t * Defines new coords for .owl-stage while dragging it\r\n\t * @todo #261\r\n\t * @param event the event arguments.\r\n\t * @param dragData initial data got after starting dragging\r\n\t * @returns coords or false\r\n\t */\r\n  defineNewCoordsDrag(event: any, dragData: any): boolean | Coords {\r\n\t\tlet minimum = null,\r\n\t\tmaximum = null,\r\n\t\tpull = null;\r\n\t\tconst\tdelta = this.difference(dragData.pointer, this.pointer(event)),\r\n\t\t\tstage = this.difference(dragData.stage.start, delta);\r\n\r\n\t\tif (!this.is('dragging')) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (this.settings.loop) {\r\n\t\t\tminimum = this.coordinates(this.minimum());\r\n\t\t\tmaximum = +this.coordinates(this.maximum() + 1) - minimum;\r\n\t\t\tstage.x = (((stage.x - minimum) % maximum + maximum) % maximum) + minimum;\r\n\t\t} else {\r\n\t\t\tminimum = this.settings.rtl ? this.coordinates(this.maximum()) : this.coordinates(this.minimum());\r\n\t\t\tmaximum = this.settings.rtl ? this.coordinates(this.minimum()) : this.coordinates(this.maximum());\r\n\t\t\tpull = this.settings.pullDrag ? -1 * delta.x / 5 : 0;\r\n\t\t\tstage.x = Math.max(Math.min(stage.x, minimum + pull), maximum + pull);\r\n\t\t}\r\n\r\n\t\treturn stage;\r\n\t}\r\n\r\n  /**\r\n\t * Finishes dragging of carousel when `touchend` and `mouseup` events fire.\r\n\t * @todo #261\r\n\t * @todo Threshold for click event\r\n\t * @param event the event arguments.\r\n\t * @param dragObj the object with dragging settings and states\r\n\t * @param clickAttacher function which attaches click handler to slide or its children elements in order to prevent event bubling\r\n\t */\r\n  finishDragging(event: any, dragObj: any, clickAttacher: () => void) {\r\n\t\tconst delta = this.difference(dragObj.pointer, this.pointer(event)),\r\n        stage = dragObj.stage.current,\r\n\t\t\t\tdirection = delta.x > +this.settings.rtl ? 'left' : 'right';\r\n\t\tlet currentSlideI: number, current: number, newCurrent: number;\r\n\r\n      if (delta.x !== 0 && this.is('dragging') || !this.is('valid')) {\r\n        this.speed(+this.settings.dragEndSpeed || this.settings.smartSpeed);\r\n\t\t\t\tcurrentSlideI = this.closest(stage.x, delta.x !== 0 ? direction : dragObj.direction);\r\n\t\t\t\tcurrent = this.current();\r\n        newCurrent = this.current(currentSlideI === -1 ? undefined : currentSlideI);\r\n\r\n\t\t\t\tif (current !== newCurrent) {\r\n\t\t\t\t\tthis.invalidate('position');\r\n\t\t\t\t\tthis.update();\r\n\t\t\t\t}\r\n\r\n        dragObj.direction = direction;\r\n\r\n        if (Math.abs(delta.x) > 3 || new Date().getTime() - dragObj.time > 300) {\r\n\t\t\t\t\tclickAttacher();\r\n        }\r\n      }\r\n      if (!this.is('dragging')) {\r\n        return;\r\n      }\r\n      this.leave('dragging');\r\n\t }\r\n\r\n  /**\r\n\t * Gets absolute position of the closest item for a coordinate.\r\n\t * @todo Setting `freeDrag` makes `closest` not reusable. See #165.\r\n\t * @param coordinate The coordinate in pixel.\r\n\t * @param direction The direction to check for the closest item. Ether `left` or `right`.\r\n\t * @returns The absolute position of the closest item.\r\n\t */\r\n  closest(coordinate: number, direction: string): number {\r\n\t\tconst pull = 30,\r\n\t\t\twidth = this.width();\r\n\t\tlet\tcoordinates: number[] = this.coordinates() as number[],\r\n\t\t position = -1;\r\n\r\n\t\tif (this.settings.center) {\r\n\t\t\tcoordinates = coordinates.map(item => {\r\n\t\t\t\tif (item === 0) {\r\n\t\t\t\t\titem += 0.000001;\r\n\t\t\t\t}\r\n\t\t\t\treturn item;\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\t// option 'freeDrag' doesn't have realization and using it here creates problem:\r\n\t\t// variable 'position' stays unchanged (it equals -1 at the begging) and thus method returns -1\r\n\t\t// Returning value is consumed by method current(), which taking -1 as argument calculates the index of new current slide\r\n\t\t// In case of having 5 slides ans 'loop=false; calling 'current(-1)' sets props '_current' as 4. Just last slide remains visible instead of 3 last slides.\r\n\r\n\t\t// if (!this.settings.freeDrag) {\r\n\t\t\t// check closest item\r\n\t\t\tfor (let i = 0; i < coordinates.length; i++) {\r\n\r\n\t\t\t\tif (direction === 'left' && coordinate > coordinates[i] - pull && coordinate < coordinates[i] + pull) {\r\n\t\t\t\t\tposition = i;\r\n\t\t\t\t// on a right pull, check on previous index\r\n\t\t\t\t// to do so, subtract width from value and set position = index + 1\r\n\t\t\t\t} else if (direction === 'right' && coordinate > coordinates[i] - width - pull && coordinate < coordinates[i] - width + pull) {\r\n\t\t\t\t\tposition = i + 1;\r\n\t\t\t\t} else if (this._op(coordinate, '<', coordinates[i])\r\n\t\t\t\t\t&& this._op(coordinate, '>', coordinates[i + 1] || coordinates[i] - width)) {\r\n\t\t\t\t\tposition = direction === 'left' ? i + 1 : i;\r\n\t\t\t\t} else if (direction === null && coordinate > coordinates[i] - pull && coordinate < coordinates[i] + pull) {\r\n\t\t\t\t\tposition = i;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (position !== -1) { break };\r\n\t\t\t}\r\n\t\t// }\r\n\r\n\t\tif (!this.settings.loop) {\r\n\t\t\t// non loop boundries\r\n\t\t\tif (this._op(coordinate, '>', coordinates[this.minimum()])) {\r\n\t\t\t\tposition = coordinate = this.minimum();\r\n\t\t\t} else if (this._op(coordinate, '<', coordinates[this.maximum()])) {\r\n\t\t\t\tposition = coordinate = this.maximum();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn position;\r\n\t }\r\n\r\n  /**\r\n\t * Animates the stage.\r\n\t * @todo #270\r\n\t * @param coordinate The coordinate in pixels.\r\n\t */\r\n  animate(coordinate: number | number[]) {\r\n\t\tconst animate = this.speed() > 0;\r\n\r\n\t\tif (this.is('animating')) {\r\n\t\t\tthis.onTransitionEnd();\r\n\t\t}\r\n\r\n\t\tif (animate) {\r\n\t\t\tthis.enter('animating');\r\n\t\t\tthis._trigger('translate');\r\n\t\t}\r\n\r\n\t\tthis.stageData.transform = 'translate3d(' + coordinate + 'px,0px,0px)';\r\n\t\tthis.stageData.transition = (this.speed() / 1000) + 's';\r\n\r\n\t\t// also there was transition by means of JQuery.animate or css-changing property left\r\n\t }\r\n\r\n  /**\r\n\t * Checks whether the carousel is in a specific state or not.\r\n\t * @param state The state to check.\r\n\t * @returns The flag which indicates if the carousel is busy.\r\n\t */\r\n  is(state: string): boolean {\r\n\t\treturn this._states.current[state] && this._states.current[state] > 0;\r\n  };\r\n\r\n  /**\r\n\t * Sets the absolute position of the current item.\r\n\t * @param position The new absolute position or nothing to leave it unchanged.\r\n\t * @returns The absolute position of the current item.\r\n\t */\r\n  current(position?: number): number {\r\n\t\tif (position === undefined) {\r\n\t\t\treturn this._current;\r\n\t\t}\r\n\r\n\t\tif (this._items.length === 0) {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\r\n\t\tposition = this.normalize(position);\r\n\r\n\t\tif (this._current !== position) {\r\n\t\t\tconst event = this._trigger('change', { property: { name: 'position', value: position } });\r\n\r\n\t\t\t// if (event.data !== undefined) {\r\n\t\t\t// \tposition = this.normalize(event.data);\r\n\t\t\t// }\r\n\r\n\t\t\tthis._current = position;\r\n\r\n\t\t\tthis.invalidate('position');\r\n\t\t\tthis._trigger('changed', { property: { name: 'position', value: this._current } });\r\n\t\t}\r\n\r\n\t\treturn this._current;\r\n\t }\r\n\r\n  /**\r\n\t * Invalidates the given part of the update routine.\r\n\t * @param part The part to invalidate.\r\n\t * @returns The invalidated parts.\r\n\t */\r\n  invalidate(part: string): string[] {\r\n\t\tif (typeof part === 'string') {\r\n\t\t\tthis._invalidated[part] = true;\r\n\t\t\tif(this.is('valid')) { this.leave('valid'); }\r\n\t\t}\r\n\t\treturn Object.keys(this._invalidated);\r\n  };\r\n\r\n\t/**\r\n\t * Resets the absolute position of the current item.\r\n\t * @param position the absolute position of the new item.\r\n\t */\r\n  reset(position: number) {\r\n\t\tposition = this.normalize(position);\r\n\r\n\t\tif (position === undefined) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._speed = 0;\r\n\t\tthis._current = position;\r\n\r\n\t\tthis._suppress([ 'translate', 'translated' ]);\r\n\r\n\t\tthis.animate(this.coordinates(position));\r\n\r\n\t\tthis._release([ 'translate', 'translated' ]);\r\n\t}\r\n\r\n  /**\r\n\t * Normalizes an absolute or a relative position of an item.\r\n\t * @param position The absolute or relative position to normalize.\r\n\t * @param relative Whether the given position is relative or not.\r\n\t * @returns The normalized position.\r\n\t */\r\n  normalize(position: number, relative?: boolean): number {\r\n\t\tconst n = this._items.length,\r\n\t\t\t\t\tm = relative ? 0 : this._clones.length;\r\n\r\n\t\tif (!this._isNumeric(position) || n < 1) {\r\n\t\t\tposition = undefined;\r\n\t\t} else if (position < 0 || position >= n + m) {\r\n\t\t\tposition = ((position - m / 2) % n + n) % n + m / 2;\r\n\t\t}\r\n\r\n\t\treturn position;\r\n\t }\r\n\r\n  /**\r\n\t * Converts an absolute position of an item into a relative one.\r\n\t * @param position The absolute position to convert.\r\n\t * @returns The converted position.\r\n\t */\r\n  relative(position: number): number {\r\n\t\tposition -= this._clones.length / 2;\r\n\t\treturn this.normalize(position, true);\r\n\t}\r\n\r\n  /**\r\n\t * Gets the maximum position for the current item.\r\n\t * @param relative Whether to return an absolute position or a relative position.\r\n\t * @returns number of maximum position\r\n\t */\r\n  maximum(relative: boolean = false): number {\r\n\t\tconst settings = this.settings;\r\n\t\tlet\tmaximum = this._coordinates.length,\r\n\t\t\titerator,\r\n\t\t\treciprocalItemsWidth,\r\n\t\t\telementWidth;\r\n\r\n\t\tif (settings.loop) {\r\n\t\t\tmaximum = this._clones.length / 2 + this._items.length - 1;\r\n\t\t} else if (settings.autoWidth || settings.merge) {\r\n\t\t\titerator = this._items.length;\r\n\t\t\treciprocalItemsWidth = this.slidesData[--iterator].width;\r\n\t\t\telementWidth = this._width;\r\n\t\t\twhile (iterator--) {\r\n\t\t\t\t// it could be use this._items instead of this.slidesData;\r\n\t\t\t\treciprocalItemsWidth += +this.slidesData[iterator].width + this.settings.margin;\r\n\t\t\t\tif (reciprocalItemsWidth > elementWidth) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tmaximum = iterator + 1;\r\n\t\t} else if (settings.center) {\r\n\t\t\tmaximum = this._items.length - 1;\r\n\t\t} else {\r\n\t\t\tmaximum = this._items.length - settings.items;\r\n\t\t}\r\n\r\n\t\tif (relative) {\r\n\t\t\tmaximum -= this._clones.length / 2;\r\n\t\t}\r\n\r\n\t\treturn Math.max(maximum, 0);\r\n\t }\r\n\r\n  /**\r\n\t * Gets the minimum position for the current item.\r\n\t * @param relative Whether to return an absolute position or a relative position.\r\n\t * @returns number of minimum position\r\n\t */\r\n  minimum(relative: boolean = false): number {\r\n\t\treturn relative ? 0 : this._clones.length / 2;\r\n\t}\r\n\r\n  /**\r\n\t * Gets an item at the specified relative position.\r\n\t * @param position The relative position of the item.\r\n\t * @returns The item at the given position or all items if no position was given.\r\n\t */\r\n  items(position?: number): CarouselSlideDirective[] {\r\n\t\tif (position === undefined) {\r\n\t\t\treturn this._items.slice();\r\n\t\t}\r\n\r\n\t\tposition = this.normalize(position, true);\r\n\t\treturn [this._items[position]];\r\n\t }\r\n\r\n  /**\r\n\t * Gets an item at the specified relative position.\r\n\t * @param position The relative position of the item.\r\n\t * @returns The item at the given position or all items if no position was given.\r\n\t */\r\n  mergers(position: number): number | number[] {\r\n\t\tif (position === undefined) {\r\n\t\t\treturn this._mergers.slice();\r\n\t\t}\r\n\r\n\t\tposition = this.normalize(position, true);\r\n\t\treturn this._mergers[position];\r\n\t }\r\n\r\n  /**\r\n\t * Gets the absolute positions of clones for an item.\r\n\t * @param position The relative position of the item.\r\n\t * @returns The absolute positions of clones for the item or all if no position was given.\r\n\t */\r\n  clones(position?: number): number[] {\r\n\t\tconst odd = this._clones.length / 2,\r\n\t\t\teven = odd + this._items.length,\r\n\t\t\tmap = index => index % 2 === 0 ? even + index / 2 : odd - (index + 1) / 2;\r\n\r\n\t\tif (position === undefined) {\r\n\t\t\treturn this._clones.map((v, i) => map(i));\r\n\t\t}\r\n\r\n\t\treturn this._clones.map((v, i) => v === position ? map(i) : null);\r\n\t}\r\n\r\n  /**\r\n\t * Sets the current animation speed.\r\n\t * @param speed The animation speed in milliseconds or nothing to leave it unchanged.\r\n\t * @returns The current animation speed in milliseconds.\r\n\t */\r\n  speed(speed?: number): number {\r\n\t\tif (speed !== undefined) {\r\n\t\t\tthis._speed = speed;\r\n\t\t}\r\n\r\n\t\treturn this._speed;\r\n\t}\r\n\r\n  /**\r\n\t * Gets the coordinate of an item.\r\n\t * @todo The name of this method is missleanding.\r\n\t * @param position The absolute position of the item within `minimum()` and `maximum()`.\r\n\t * @returns The coordinate of the item in pixel or all coordinates.\r\n\t */\r\n  coordinates(position?: number): number | number[] {\r\n\t\tlet multiplier = 1,\r\n\t\t\tnewPosition = position - 1,\r\n\t\t\tcoordinate,\r\n\t\t\tresult: number[];\r\n\r\n\t\tif (position === undefined) {\r\n\t\t\tresult = this._coordinates.map((item, index) => {\r\n\t\t\t\treturn this.coordinates(index) as number;\r\n\t\t\t});\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\t\tif (this.settings.center) {\r\n\t\t\tif (this.settings.rtl) {\r\n\t\t\t\tmultiplier = -1;\r\n\t\t\t\tnewPosition = position + 1;\r\n\t\t\t}\r\n\r\n\t\t\tcoordinate = this._coordinates[position];\r\n\t\t\tcoordinate += (this.width() - coordinate + (this._coordinates[newPosition] || 0)) / 2 * multiplier;\r\n\t\t} else {\r\n\t\t\tcoordinate = this._coordinates[newPosition] || 0;\r\n\t\t}\r\n\r\n\t\tcoordinate = Math.ceil(coordinate);\r\n\r\n\t\treturn coordinate;\r\n\t }\r\n\r\n  /**\r\n\t * Calculates the speed for a translation.\r\n\t * @param from The absolute position of the start item.\r\n\t * @param to The absolute position of the target item.\r\n\t * @param factor [factor=undefined] - The time factor in milliseconds.\r\n\t * @returns The time in milliseconds for the translation.\r\n\t */\r\n  private _duration(from: number, to: number, factor?: number | boolean): number {\r\n\t\tif (factor === 0) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\r\n\t\treturn Math.min(Math.max(Math.abs(to - from), 1), 6) * Math.abs((+factor || this.settings.smartSpeed));\r\n\t}\r\n\r\n  /**\r\n\t * Slides to the specified item.\r\n\t * @param position The position of the item.\r\n\t * @param speed The time in milliseconds for the transition.\r\n\t */\r\n  to(position: number, speed: number | boolean) {\r\n\t\tlet current = this.current(),\r\n\t\t\trevert = null,\r\n\t\t\tdistance = position - this.relative(current),\r\n\t\t\tmaximum = this.maximum();\r\n\t\tconst\tdirection = +(distance > 0) - +(distance < 0),\r\n\t\t\titems = this._items.length,\r\n\t\t\tminimum = this.minimum();\r\n\r\n\t\tif (this.settings.loop) {\r\n\t\t\tif (!this.settings.rewind && Math.abs(distance) > items / 2) {\r\n\t\t\t\tdistance += direction * -1 * items;\r\n\t\t\t}\r\n\r\n\t\t\tposition = current + distance;\r\n\t\t\trevert = ((position - minimum) % items + items) % items + minimum;\r\n\r\n\t\t\tif (revert !== position && revert - distance <= maximum && revert - distance > 0) {\r\n\t\t\t\tcurrent = revert - distance;\r\n\t\t\t\tposition = revert;\r\n\t\t\t\tthis.reset(current);\r\n\t\t\t\tthis.sendChanges();\r\n\t\t\t}\r\n\t\t} else if (this.settings.rewind) {\r\n\t\t\tmaximum += 1;\r\n\t\t\tposition = (position % maximum + maximum) % maximum;\r\n\t\t} else {\r\n\t\t\tposition = Math.max(minimum, Math.min(maximum, position));\r\n\t\t}\r\n\r\n\t\tsetTimeout(() => {\r\n\t\t\tthis.speed(this._duration(current, position, speed));\r\n\t\t\tthis.current(position);\r\n\r\n\t\t\tthis.update();\r\n\t\t}, 0);\r\n\r\n\t}\r\n\r\n  /**\r\n\t * Slides to the next item.\r\n\t * @param speed The time in milliseconds for the transition.\r\n\t */\r\n  next(speed: number | boolean) {\r\n\t\tspeed = speed || false;\r\n\t\tthis.to(this.relative(this.current()) + 1, speed);\r\n\t}\r\n\r\n  /**\r\n\t * Slides to the previous item.\r\n\t * @param speed The time in milliseconds for the transition.\r\n\t */\r\n  prev(speed: number | boolean) {\r\n\t\tspeed = speed || false;\r\n\t\tthis.to(this.relative(this.current()) - 1, speed);\r\n\t}\r\n\r\n  /**\r\n\t * Handles the end of an animation.\r\n\t * @param event - The event arguments.\r\n\t */\r\n  onTransitionEnd(event?: any) {\r\n\t\t// if css2 animation then event object is undefined\r\n\t\tif (event !== undefined) {\r\n\t\t\t// event.stopPropagation();\r\n\r\n\t\t\t// // Catch only owl-stage transitionEnd event\r\n\t\t\t// if ((event.target || event.srcElement || event.originalTarget) !== this.$stage.get(0)\t) {\r\n\t\t\t// \treturn false;\r\n\t\t\t// }\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tthis.leave('animating');\r\n\t\tthis._trigger('translated');\r\n\t}\r\n\r\n  /**\r\n\t * Gets viewport width.\r\n\t * @returns - The width in pixel.\r\n\t */\r\n  private _viewport(): number {\r\n\t\tlet width;\r\n\t\tif (this._width) {\r\n\t\t\twidth = this._width;\r\n\t\t} else {\r\n\t\t\tconsole.warn('Can not detect viewport width.');\r\n\t\t}\r\n\t\treturn width;\r\n\t}\r\n\r\n  /**\r\n\t * Sets _items\r\n\t * @param content The list of slides put into CarouselSlideDirectives.\r\n\t */\r\n  setItems(content: CarouselSlideDirective[]) {\r\n\t\tthis._items = content;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets slidesData using this._items\r\n\t */\r\n\tprivate _defineSlidesData() {\r\n\t\tthis.slidesData = this._items.map(slide => {\r\n\t\t\treturn {\r\n\t\t\t\tid: `${slide.id}`,\r\n\t\t\t\tactive: false,\r\n\t\t\t\ttplRef: slide.tplRef,\r\n\t\t\t\tdataMerge: slide.dataMerge,\r\n\t\t\t\twidth: 0,\r\n\t\t\t\tcloned: false\r\n\t\t\t};\r\n\t\t});\r\n\t}\r\n\r\n  /**\r\n\t * Operators to calculate right-to-left and left-to-right.\r\n\t * @param a - The left side operand.\r\n\t * @param o - The operator.\r\n\t * @param b - The right side operand.\r\n\t * @returns true/false meaning right-to-left or left-to-right\r\n\t */\r\n  private _op(a: number, o: string, b: number): boolean {\r\n\t\tconst rtl = this.settings.rtl;\r\n\t\tswitch (o) {\r\n\t\t\tcase '<':\r\n\t\t\t\treturn rtl ? a > b : a < b;\r\n\t\t\tcase '>':\r\n\t\t\t\treturn rtl ? a < b : a > b;\r\n\t\t\tcase '>=':\r\n\t\t\t\treturn rtl ? a <= b : a >= b;\r\n\t\t\tcase '<=':\r\n\t\t\t\treturn rtl ? a >= b : a <= b;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n  /**\r\n\t * Triggers a public event.\r\n\t * @todo Remove `status`, `relatedTarget` should be used instead.\r\n\t * @param name The event name.\r\n\t * @param data The event data.\r\n\t * @param namespace The event namespace.\r\n\t * @param state The state which is associated with the event.\r\n\t * @param enter Indicates if the call enters the specified state or not.\r\n\t */\r\n  private _trigger(name: string, data?: any, namespace?: string, state?: string, enter?: boolean) {\r\n\t\tswitch (name) {\r\n\t\t\tcase 'initialized':\r\n\t\t\t\tthis._initializedCarousel$.next(name);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'translated':\r\n\t\t\t\tthis._translatedCarousel$.next(name);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'change':\r\n\t\t\t\tthis._changedSettingsCarousel$.next(data);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'changed':\r\n\t\t\t\tthis._changedSettingsCarousel$.next(data);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'resize':\r\n\t\t\t\tthis._resizeCarousel$.next(name);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'resized':\r\n\t\t\t\tthis._resizedCarousel$.next(name);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'refresh':\r\n\t\t\t\tthis._refreshCarousel$.next(name);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'refreshed':\r\n\t\t\t\tthis._refreshedCarousel$.next(name);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Enters a state.\r\n\t * @param name - The state name.\r\n\t */\r\n  enter(name: string) {\r\n    [ name ].concat(this._states.tags[name] || []).forEach((stateName) => {\r\n      if (this._states.current[stateName] === undefined) {\r\n\t\t\t\tthis._states.current[stateName] = 0;\r\n\t\t\t}\r\n\r\n\t\t\tthis._states.current[stateName]++;\r\n    });\r\n  };\r\n\r\n  /**\r\n\t * Leaves a state.\r\n\t * @param name - The state name.\r\n\t */\r\n\tleave(name: string) {\r\n    [ name ].concat(this._states.tags[name] || []).forEach((stateName) => {\r\n      if (this._states.current[stateName] === 0 || !!this._states.current[stateName]) {\r\n        this._states.current[stateName]--;\r\n      }\r\n    })\r\n  };\r\n\r\n  /**\r\n\t * Registers an event or state.\r\n\t * @param object - The event or state to register.\r\n\t */\r\n  register(object: any) {\r\n\t\tif (object.type === Type.State) {\r\n\t\t\tif (!this._states.tags[object.name]) {\r\n\t\t\t\tthis._states.tags[object.name] = object.tags;\r\n\t\t\t} else {\r\n\t\t\t\tthis._states.tags[object.name] = this._states.tags[object.name].concat(object.tags);\r\n\t\t\t}\r\n\r\n\t\t\tthis._states.tags[object.name] = this._states.tags[object.name].filter((tag, i) => {\r\n\t\t\t\treturn this._states.tags[object.name].indexOf(tag) === i;\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n  /**\r\n\t * Suppresses events.\r\n\t * @param events The events to suppress.\r\n\t */\r\n  private _suppress(events: string[]) {\r\n\t\tevents.forEach(event => {\r\n\t\t\tthis._supress[event] = true;\r\n\t\t});\r\n\t}\r\n\r\n  /**\r\n\t * Releases suppressed events.\r\n\t * @param events The events to release.\r\n\t */\r\n  private _release(events: string[]) {\r\n\t\tevents.forEach(event => {\r\n\t\t\tdelete this._supress[event];\r\n\t\t});\r\n\t }\r\n\r\n  /**\r\n\t * Gets unified pointer coordinates from event.\r\n\t * @todo #261\r\n\t * @param event The `mousedown` or `touchstart` event.\r\n\t * @returns Object Coords which contains `x` and `y` coordinates of current pointer position.\r\n\t */\r\n\tpointer(event: any): Coords {\r\n\t\tconst result = { x: null, y: null };\r\n\r\n\t\tevent = event.originalEvent || event || window.event;\r\n\r\n\t\tevent = event.touches && event.touches.length ?\r\n\t\t\tevent.touches[0] : event.changedTouches && event.changedTouches.length ?\r\n\t\t\t\tevent.changedTouches[0] : event;\r\n\r\n\t\tif (event.pageX) {\r\n\t\t\tresult.x = event.pageX;\r\n\t\t\tresult.y = event.pageY;\r\n\t\t} else {\r\n\t\t\tresult.x = event.clientX;\r\n\t\t\tresult.y = event.clientY;\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t }\r\n\r\n  /**\r\n\t * Determines if the input is a Number or something that can be coerced to a Number\r\n\t * @param number The input to be tested\r\n\t * @returns An indication if the input is a Number or can be coerced to a Number\r\n\t */\r\n  private _isNumeric(number: any): boolean {\r\n\t\treturn !isNaN(parseFloat(number));\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether value is number or boolean type\r\n\t * @param value The input to be tested\r\n\t * @returns An indication if the input is a Number or can be coerced to a Number, or Boolean\r\n\t */\r\n\tprivate _isNumberOrBoolean(value: number | boolean): boolean {\r\n\t\treturn this._isNumeric(value) || typeof value === 'boolean';\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether value is number or string type\r\n\t * @param value The input to be tested\r\n\t * @returns An indication if the input is a Number or can be coerced to a Number, or String\r\n\t */\r\n\tprivate _isNumberOrString(value: number | string): boolean {\r\n\t\treturn this._isNumeric(value) || typeof value === 'string';\r\n\t}\r\n\r\n  /**\r\n\t * Gets the difference of two vectors.\r\n\t * @todo #261\r\n\t * @param first The first vector.\r\n\t * @param second- The second vector.\r\n\t * @returns The difference.\r\n\t */\r\n  difference(first: Coords, second: Coords): Coords {\r\n\t\treturn {\r\n\t\t\tx: first.x - second.x,\r\n\t\t\ty: first.y - second.y\r\n\t\t};\r\n\t}\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { NavData, DotsData } from '../models/navigation-data.models';\r\nimport { CarouselSlideDirective } from '../carousel/carousel.module';\r\nimport { CarouselService } from './carousel.service';\r\nimport { Subscription, Observable, merge } from 'rxjs';\r\nimport { tap, filter } from 'rxjs/operators';\r\nimport { OwlOptions } from '../models/owl-options.model';\r\n\r\n@Injectable()\r\nexport class NavigationService {\r\n  /**\r\n   * Subscrioption to merge Observable  from CarouselService\r\n   */\r\n  navSubscription: Subscription;\r\n\r\n  /**\r\n   * Indicates whether the plugin is initialized or not.\r\n   */\r\n  protected _initialized = false;\r\n\r\n  /**\r\n   * The current paging indexes.\r\n   */\r\n  protected _pages: any[] = [];\r\n\r\n  /**\r\n   * Data for navigation elements of the user interface.\r\n   */\r\n  protected _navData: NavData = {\r\n    disabled: false,\r\n    prev: {\r\n      disabled: false,\r\n      htmlText: ''\r\n    },\r\n    next: {\r\n      disabled: false,\r\n      htmlText: ''\r\n    },\r\n  };\r\n\r\n  /**\r\n   * Data for dot elements of the user interface.\r\n   */\r\n  protected _dotsData: DotsData = {\r\n    disabled: false,\r\n    dots: []\r\n  };\r\n\r\n  constructor(private carouselService: CarouselService) {\r\n    this.spyDataStreams();\r\n  }\r\n\r\n  /**\r\n   * Defines Observables which service must observe\r\n   */\r\n  spyDataStreams() {\r\n    const initializedCarousel$: Observable<string> = this.carouselService.getInitializedState().pipe(\r\n      tap(state => {\r\n        this.initialize();\r\n        this._updateNavPages();\r\n        this.draw();\r\n        this.update();\r\n        this.carouselService.sendChanges();\r\n      })\r\n    );\r\n\r\n    // mostly changes in carouselService and carousel at all causes carouselService.to(). It moves stage right-left by its code and calling needed functions\r\n    // Thus this method by calling carouselService.current(position) notifies about changes\r\n    const changedSettings$: Observable<any> = this.carouselService.getChangedState().pipe(\r\n      filter(data => data.property.name === 'position'),\r\n      tap(data => {\r\n        this.update();\r\n        // should be the call of the function written at the end of comment\r\n        // but the method carouselServive.to() has setTimeout(f, 0) which contains carouselServive.update() which calls sendChanges() method.\r\n        // carouselService.navData and carouselService.dotsData update earlier than carouselServive.update() gets called\r\n        // updates of carouselService.navData and carouselService.dotsData are being happening withing carouselService.current(position) method which calls next() of _changedSettingsCarousel$\r\n        // carouselService.current(position) is being calling earlier than carouselServive.update();\r\n        // this.carouselService.sendChanges();\r\n      })\r\n    );\r\n\r\n    const refreshedCarousel$: Observable<string> = this.carouselService.getRefreshedState().pipe(\r\n      tap(() => {\r\n        this._updateNavPages();\r\n        this.draw();\r\n        this.update();\r\n        this.carouselService.sendChanges();\r\n      })\r\n    );\r\n\r\n    const navMerge$: Observable<string> = merge(initializedCarousel$, changedSettings$, refreshedCarousel$);\r\n    this.navSubscription = navMerge$.subscribe(\r\n      () => {}\r\n    );\r\n  }\r\n\r\n  /**\r\n\t * Initializes the layout of the plugin and extends the carousel.\r\n\t */\r\n\tinitialize() {\r\n    this._navData.disabled = true;\r\n    this._navData.prev.htmlText = this.carouselService.settings.navText[0];\r\n    this._navData.next.htmlText = this.carouselService.settings.navText[1];\r\n\r\n    this._dotsData.disabled = true;\r\n\r\n    this.carouselService.navData = this._navData;\r\n    this.carouselService.dotsData = this._dotsData;\r\n  }\r\n\r\n  /**\r\n   * Calculates internal states and updates prop _pages\r\n   */\r\n\tprivate _updateNavPages() {\r\n\t\tlet i: number, j: number, k: number;\r\n\t\tconst lower: number = this.carouselService.clones().length / 2,\r\n      upper: number = lower + this.carouselService.items().length,\r\n      maximum: number = this.carouselService.maximum(true),\r\n      pages: any[] = [],\r\n      settings: OwlOptions = this.carouselService.settings;\r\n     let size = settings.center || settings.autoWidth || settings.dotsData\r\n        ? 1 : settings.dotsEach || settings.items;\r\n      size = +size;\r\n\t\tif (settings.slideBy !== 'page') {\r\n\t\t\tsettings.slideBy = Math.min(+settings.slideBy, settings.items);\r\n\t\t}\r\n\r\n\t\tif (settings.dots || settings.slideBy === 'page') {\r\n\r\n\t\t\tfor (i = lower, j = 0, k = 0; i < upper; i++) {\r\n\t\t\t\tif (j >= size || j === 0) {\r\n\t\t\t\t\tpages.push({\r\n\t\t\t\t\t\tstart: Math.min(maximum, i - lower),\r\n\t\t\t\t\t\tend: i - lower + size - 1\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif (Math.min(maximum, i - lower) === maximum) {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tj = 0, ++k;\r\n\t\t\t\t}\r\n\t\t\t\tj += this.carouselService.mergers(this.carouselService.relative(i)) as number;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._pages = pages;\r\n\t}\r\n\r\n  /**\r\n\t * Draws the user interface.\r\n\t * @todo The option `dotsData` wont work.\r\n\t */\r\n  draw() {\r\n\t\tlet difference: number;\r\n    const\tsettings: OwlOptions = this.carouselService.settings,\r\n      items: CarouselSlideDirective[] = this.carouselService.items(),\r\n      disabled = items.length <= settings.items;\r\n\r\n\t\tthis._navData.disabled = !settings.nav || disabled;\r\n\t\tthis._dotsData.disabled = !settings.dots || disabled;\r\n\r\n\t\tif (settings.dots) {\r\n\t\t\tdifference = this._pages.length - this._dotsData.dots.length;\r\n\r\n\t\t\tif (settings.dotsData && difference !== 0) {\r\n        this._dotsData.dots = [];\r\n        items.forEach(item => {\r\n          this._dotsData.dots.push({\r\n            active: false,\r\n            id: `dot-${item.id}`,\r\n            innerContent: item.dotContent,\r\n            showInnerContent: true\r\n          });\r\n        });\r\n\t\t\t} else if (difference > 0) {\r\n        const startI: number = this._dotsData.dots.length > 0 ? this._dotsData.dots.length : 0;\r\n        for (let i = 0; i < difference; i++) {\r\n          this._dotsData.dots.push({\r\n            active: false,\r\n            id: `dot-${i + startI}`,\r\n            showInnerContent: false\r\n          });\r\n        }\r\n\t\t\t} else if (difference < 0) {\r\n        this._dotsData.dots.splice(difference, Math.abs(difference))\r\n\t\t\t}\r\n    }\r\n\r\n    this.carouselService.navData = this._navData;\r\n    this.carouselService.dotsData = this._dotsData;\r\n  };\r\n\r\n  /**\r\n   * Updates navigation buttons's and dots's states\r\n   */\r\n  update() {\r\n    this._updateNavButtons();\r\n    this._updateDots();\r\n  }\r\n\r\n  /**\r\n   * Changes state of nav buttons (disabled, enabled)\r\n   */\r\n  private _updateNavButtons() {\r\n    const\tsettings: OwlOptions = this.carouselService.settings,\r\n      loop: boolean = settings.loop || settings.rewind,\r\n      index: number = this.carouselService.relative(this.carouselService.current());\r\n\r\n    if (settings.nav) {\r\n      this._navData.prev.disabled = !loop && index <= this.carouselService.minimum(true);\r\n\t\t\tthis._navData.next.disabled = !loop && index >= this.carouselService.maximum(true);\r\n    }\r\n\r\n    this.carouselService.navData = this._navData;\r\n  }\r\n\r\n  /**\r\n   * Changes active dot if page becomes changed\r\n   */\r\n  private _updateDots() {\r\n    let curActiveDotI: number;\r\n    this._dotsData.dots.forEach(item => {\r\n      if (item.active === true) {\r\n        item.active = false;\r\n      }\r\n    })\r\n\r\n    curActiveDotI = this._current();\r\n    if (this._dotsData.dots.length) {\r\n      this._dotsData.dots[curActiveDotI].active = true;\r\n    }\r\n    this.carouselService.dotsData = this._dotsData;\r\n  }\r\n\r\n  /**\r\n\t * Gets the current page position of the carousel.\r\n\t * @returns the current page position of the carousel\r\n\t */\r\n\tprivate _current(): any {\r\n    const current: number = this.carouselService.relative(this.carouselService.current());\r\n    let finalCurrent: number;\r\n    const pages: any = this._pages.filter((page, index) => {\r\n      return page.start <= current && page.end >= current;\r\n    }).pop();\r\n\r\n    finalCurrent = this._pages.findIndex(page => {\r\n      return page.start === pages.start && page.end === pages.end;\r\n    });\r\n\r\n    return finalCurrent;\r\n  };\r\n\r\n  /**\r\n\t * Gets the current succesor/predecessor position.\r\n   * @param sussessor position of slide\r\n\t * @returns the current succesor/predecessor position\r\n\t */\r\n\tprivate _getPosition(successor: number | boolean): number {\r\n\t\tlet position: number, length: number;\r\n\t\tconst\tsettings: OwlOptions = this.carouselService.settings;\r\n\r\n\t\tif (settings.slideBy === 'page') {\r\n\t\t\tposition = this._current();\r\n\t\t\tlength = this._pages.length;\r\n\t\t\tsuccessor ? ++position : --position;\r\n\t\t\tposition = this._pages[((position % length) + length) % length].start;\r\n\t\t} else {\r\n\t\t\tposition = this.carouselService.relative(this.carouselService.current());\r\n\t\t\tlength = this.carouselService.items().length;\r\n\t\t\tsuccessor ? position += +settings.slideBy : position -= +settings.slideBy;\r\n\t\t}\r\n\r\n\t\treturn position;\r\n  };\r\n\r\n  /**\r\n\t * Slides to the next item or page.\r\n\t * @param speed The time in milliseconds for the transition.\r\n\t */\r\n\tnext(speed: number | boolean) {\r\n    this.carouselService.to(this._getPosition(true), speed);\r\n\t};\r\n\r\n\t/**\r\n\t * Slides to the previous item or page.\r\n\t * @param speed The time in milliseconds for the transition.\r\n\t */\r\n\tprev(speed: number | boolean) {\r\n    this.carouselService.to(this._getPosition(false), speed);\r\n  };\r\n\r\n \t/**\r\n\t * Slides to the specified item or page.\r\n\t * @param position - The position of the item or page.\r\n\t * @param speed - The time in milliseconds for the transition.\r\n\t * @param standard - Whether to use the standard behaviour or not. Default meaning false\r\n\t */\r\n\tto(position: number, speed: number | boolean, standard?: boolean) {\r\n\t\tlet length: number;\r\n\t\tif (!standard && this._pages.length) {\r\n      length = this._pages.length;\r\n      this.carouselService.to(this._pages[((position % length) + length) % length].start, speed);\r\n\t\t} else {\r\n      this.carouselService.to(position, speed);\r\n\t\t}\r\n  };\r\n\r\n  /**\r\n   * Moves carousel after user's clicking on any dots\r\n   */\r\n  moveByDot(dotId: string) {\r\n    const index: number = this._dotsData.dots.findIndex(dot => dotId === dot.id);\r\n    this.to(index, this.carouselService.settings.dotsSpeed);\r\n  }\r\n\r\n}\r\n","// import { Injectable } from '@angular/core';\r\n// function _window(): any {\r\n//    // return the global native browser window object\r\n//    return window;\r\n// }\r\n// @Injectable()\r\n// export class WindowRefService {\r\n//    get nativeWindow(): any {\r\n//       return _window();\r\n//    }\r\n// }\r\n\r\nimport { isPlatformBrowser } from '@angular/common';\r\nimport {\r\n  ClassProvider,\r\n  FactoryProvider,\r\n  InjectionToken,\r\n  PLATFORM_ID\r\n} from '@angular/core';\r\n\r\n/**\r\n * Create a new injection token for injecting the window into a component.\r\n */\r\nexport const WINDOW = new InjectionToken('WindowToken');\r\n\r\n/**\r\n * Define abstract class for obtaining reference to the global window object.\r\n */\r\nexport abstract class WindowRef {\r\n  get nativeWindow(): Window | Object {\r\n    throw new Error('Not implemented.');\r\n  }\r\n}\r\n\r\n/**\r\n * Define class that implements the abstract class and returns the native window object.\r\n */\r\nexport class BrowserWindowRef extends WindowRef {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  /**\r\n   * @returns window object\r\n   */\r\n  get nativeWindow(): Window | Object {\r\n    return window;\r\n  }\r\n}\r\n\r\n/**\r\n * Create an factory function that returns the native window object.\r\n * @param browserWindowRef Native window object\r\n * @param platformId id of platform\r\n * @returns type of platform of empty object\r\n */\r\nexport function windowFactory(\r\n  browserWindowRef: BrowserWindowRef,\r\n  platformId: Object\r\n): Window | Object {\r\n  if (isPlatformBrowser(platformId)) {\r\n    return browserWindowRef.nativeWindow;\r\n  }\r\n  return new Object();\r\n}\r\n\r\n/**\r\n * Create a injectable provider for the WindowRef token that uses the BrowserWindowRef class.\r\n */\r\nexport const browserWindowProvider: ClassProvider = {\r\n  provide: WindowRef,\r\n  useClass: BrowserWindowRef\r\n};\r\n\r\n/**\r\n * Create an injectable provider that uses the windowFactory function for returning the native window object.\r\n */\r\nexport const windowProvider: FactoryProvider = {\r\n  provide: WINDOW,\r\n  useFactory: windowFactory,\r\n  deps: [WindowRef, PLATFORM_ID]\r\n};\r\n\r\n/**\r\n * Create an array of providers.\r\n */\r\nexport const WINDOW_PROVIDERS = [browserWindowProvider, windowProvider];\r\n","import { isPlatformBrowser } from '@angular/common';\r\nimport {\r\n  ClassProvider,\r\n  FactoryProvider,\r\n  InjectionToken,\r\n  PLATFORM_ID,\r\n} from '@angular/core';\r\n\r\n/**\r\n * Create a new injection token for injecting the Document into a component.\r\n */\r\nexport const DOCUMENT = new InjectionToken<Document>('DocumentToken');\r\n/**\r\n * Define abstract class for obtaining reference to the global Document object.\r\n */\r\nexport abstract class DocumentRef {\r\n  get nativeDocument(): Document | Object {\r\n    throw new Error('Not implemented.');\r\n  }\r\n}\r\n\r\n/**\r\n * Define class that implements the abstract class and returns the native Document object.\r\n */\r\nexport class BrowserDocumentRef extends DocumentRef {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  /**\r\n   * @returns Document object\r\n   */\r\n  get nativeDocument(): Document | Object {\r\n    return document;\r\n  }\r\n}\r\n\r\n/**\r\n * Create an factory function that returns the native Document object.\r\n * @param browserDocumentRef Native Document object\r\n * @param platformId id of platform\r\n * @returns type of platform of empty object\r\n */\r\nexport function documentFactory(\r\n  browserDocumentRef: BrowserDocumentRef,\r\n  platformId: Object\r\n): Document | Object {\r\n  if (isPlatformBrowser(platformId)) {\r\n    return browserDocumentRef.nativeDocument;\r\n  }\r\n  return new Object();\r\n}\r\n\r\n/**\r\n * Create a injectable provider for the DocumentRef token that uses the BrowserDocumentRef class.\r\n */\r\nexport const browserDocumentProvider: ClassProvider = {\r\n  provide: DocumentRef,\r\n  useClass: BrowserDocumentRef\r\n};\r\n\r\n/**\r\n * Create an injectable provider that uses the DocumentFactory function for returning the native Document object.\r\n */\r\nexport const documentProvider: FactoryProvider = {\r\n  provide: DOCUMENT,\r\n  useFactory: documentFactory,\r\n  deps: [DocumentRef, PLATFORM_ID]\r\n};\r\n\r\n/**\r\n * Create an array of providers.\r\n */\r\nexport const DOCUMENT_PROVIDERS = [browserDocumentProvider, documentProvider];\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { Subscription, Observable, merge } from 'rxjs';\r\nimport { CarouselService } from './carousel.service';\r\nimport { tap } from 'rxjs/operators';\r\nimport { WINDOW } from './window-ref.service';\r\nimport { DOCUMENT } from './document-ref.service';\r\n\r\n@Injectable()\r\nexport class AutoplayService {\r\n  /**\r\n   * Subscrioption to merge Observables from CarouselService\r\n   */\r\n  autoplaySubscription: Subscription;\r\n\r\n  /**\r\n   * The autoplay timeout.\r\n   */\r\n  private _timeout: number = null;\r\n\r\n  /**\r\n   * Indicates whenever the autoplay is paused.\r\n   */\r\n  private _paused = false;\r\n\r\n  private winRef: Window;\r\n  private docRef: Document;\r\n\r\n  constructor(private carouselService: CarouselService,\r\n              @Inject(WINDOW) winRef: any,\r\n              @Inject(DOCUMENT) docRef: any,\r\n  ) {\r\n    this.winRef = winRef as Window;\r\n    this.docRef = docRef as Document;\r\n    this.spyDataStreams();\r\n  }\r\n\r\n  /**\r\n   * Defines Observables which service must observe\r\n   */\r\n  spyDataStreams() {\r\n    const initializedCarousel$: Observable<string> = this.carouselService.getInitializedState().pipe(\r\n      tap(() => {\r\n        if (this.carouselService.settings.autoplay) {\r\n\t\t\t\t\tthis.play();\r\n\t\t\t\t}\r\n      })\r\n    );\r\n\r\n    const changedSettings$: Observable<any> = this.carouselService.getChangedState().pipe(\r\n      tap(data => {\r\n        this._handleChangeObservable(data);\r\n      })\r\n    );\r\n\r\n    // original Autoplay Plugin has listeners on play.owl.core and stop.owl.core events.\r\n    // They are triggered by Video Plugin\r\n\r\n    const autoplayMerge$: Observable<string> = merge(initializedCarousel$, changedSettings$);\r\n    this.autoplaySubscription = autoplayMerge$.subscribe(\r\n      () => {}\r\n    );\r\n  }\r\n\r\n  /**\r\n\t * Starts the autoplay.\r\n\t * @param timeout The interval before the next animation starts.\r\n\t * @param speed The animation speed for the animations.\r\n\t */\r\n\tplay(timeout?: number, speed?: number) {\r\n    if (this._paused) {\r\n\t\t\tthis._paused = false;\r\n\t\t\tthis._setAutoPlayInterval();\r\n    }\r\n\r\n\t\tif (this.carouselService.is('rotating')) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.carouselService.enter('rotating');\r\n\r\n\t\tthis._setAutoPlayInterval();\r\n  };\r\n\r\n  /**\r\n\t * Gets a new timeout\r\n\t * @param timeout - The interval before the next animation starts.\r\n\t * @param speed - The animation speed for the animations.\r\n\t * @return\r\n\t */\r\n\tprivate _getNextTimeout(timeout?: number, speed?: number): number {\r\n\t\tif ( this._timeout ) {\r\n\t\t\tthis.winRef.clearTimeout(this._timeout);\r\n\t\t}\r\n\t\treturn this.winRef.setTimeout(() =>{\r\n      if (this._paused || this.carouselService.is('busy') || this.carouselService.is('interacting') || this.docRef.hidden) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.carouselService.next(speed || this.carouselService.settings.autoplaySpeed);\r\n    }, timeout || this.carouselService.settings.autoplayTimeout);\r\n  };\r\n\r\n  /**\r\n\t * Sets autoplay in motion.\r\n\t */\r\n\tprivate _setAutoPlayInterval() {\r\n\t\tthis._timeout = this._getNextTimeout();\r\n\t};\r\n\r\n\t/**\r\n\t * Stops the autoplay.\r\n\t */\r\n\tstop() {\r\n\t\tif (!this.carouselService.is('rotating')) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.winRef.clearTimeout(this._timeout);\r\n\t\tthis.carouselService.leave('rotating');\r\n  };\r\n\r\n  /**\r\n\t * Stops the autoplay.\r\n\t */\r\n\tpause() {\r\n\t\tif (!this.carouselService.is('rotating')) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._paused = true;\r\n  };\r\n\r\n  /**\r\n   * Manages by autoplaying according to data passed by _changedSettingsCarousel$ Obsarvable\r\n   * @param data object with current position of carousel and type of change\r\n   */\r\n  private _handleChangeObservable(data) {\r\n    if (data.property.name === 'settings') {\r\n      if (this.carouselService.settings.autoplay) {\r\n        this.play();\r\n      } else {\r\n        this.stop();\r\n      }\r\n    } else if (data.property.name === 'position') {\r\n      //console.log('play?', e);\r\n      if (this.carouselService.settings.autoplay) {\r\n        this._setAutoPlayInterval();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Starts pausing\r\n   */\r\n  startPausing() {\r\n    if (this.carouselService.settings.autoplayHoverPause && this.carouselService.is('rotating')) {\r\n      this.pause();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Starts playing after mouse leaves carousel\r\n   */\r\n  startPlayingMouseLeave() {\r\n    if (this.carouselService.settings.autoplayHoverPause && this.carouselService.is('rotating')) {\r\n      this.pause();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Starts playing after touch ends\r\n   */\r\n  startPlayingTouchEnd() {\r\n    if (this.carouselService.settings.autoplayHoverPause && this.carouselService.is('rotating')) {\r\n      this.pause();\r\n    }\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  AfterContentChecked,\r\n  OnDestroy,\r\n  Input,\r\n  Output,\r\n  Directive,\r\n  QueryList,\r\n  ContentChildren,\r\n  TemplateRef,\r\n  ElementRef,\r\n  Inject,\r\n  AfterContentInit,\r\n  EventEmitter\r\n} from '@angular/core';\r\n\r\nimport { Subscription, Observable, merge } from 'rxjs';\r\n\r\nimport { ResizeService } from '../services/resize.service';\r\nimport { WINDOW } from '../services/window-ref.service';\r\nimport { tap, delay, filter } from 'rxjs/operators';\r\nimport { CarouselService, CarouselCurrentData } from '../services/carousel.service';\r\nimport { StageData } from \"../models/stage-data.model\";\r\nimport { OwlDOMData } from \"../models/owlDOM-data.model\";\r\nimport { SliderModel } from '../models/slider.model';\r\nimport { OwlOptions } from '../models/owl-options.model';\r\nimport { NavData, DotsData } from '../models/navigation-data.models';\r\nimport { NavigationService } from '../services/navigation.service';\r\nimport { AutoplayService } from '../services/autoplay.service';\r\n\r\nlet nextId = 0;\r\n\r\n@Directive({ selector: 'ng-template[carouselSlide]' })\r\nexport class CarouselSlideDirective {\r\n  /**\r\n   * Unique slide identifier. Must be unique for the entire document for proper accessibility support.\r\n   * Will be auto-generated if not provided.\r\n   */\r\n  @Input() id = `owl-slide-${nextId++}`;\r\n\r\n  /**\r\n   * Defines how much widths of common slide will current slide have\r\n   * e.g. if _mergeData=2, the slide will twice wider then slides with _mergeData=1\r\n   */\r\n  private _dataMerge = 1;\r\n  @Input()\r\n  set dataMerge(data: number) {\r\n    this._dataMerge = this.isNumeric(data) ? data : 1;\r\n  };\r\n  get dataMerge(): number { return this._dataMerge }\r\n\r\n  /**\r\n   * Width of slide\r\n   */\r\n  @Input() width = 0;\r\n\r\n  /**\r\n   * Inner content of dot for certain slide; can be html-markup\r\n   */\r\n  @Input() dotContent = '';\r\n\r\n  constructor(public tplRef: TemplateRef<any>) {}\r\n\r\n  /**\r\n\t * Determines if the input is a Number or something that can be coerced to a Number\r\n\t * @param - The input to be tested\r\n\t * @returns - An indication if the input is a Number or can be coerced to a Number\r\n\t */\r\n  isNumeric(number: any): boolean {\r\n\t\treturn !isNaN(parseFloat(number));\r\n\t}\r\n}\r\n\r\n/**\r\n * Data which will be passed out after ending of transition of carousel\r\n */\r\nexport class SlidesOutputData {\r\n  startPosition?: number;\r\n  slides?: SliderModel[];\r\n};\r\n\r\n@Component({\r\n  selector: 'owl-carousel-o',\r\n  template: `\r\n    <div class=\"owl-carousel owl-theme\" #owlCarousel\r\n      [ngClass]=\"{'owl-rtl': owlDOMData?.rtl,\r\n                  'owl-loaded': owlDOMData?.isLoaded,\r\n                  'owl-responsive': owlDOMData?.isResponsive,\r\n                  'owl-drag': owlDOMData?.isMouseDragable,\r\n                  'owl-grab': owlDOMData?.isGrab}\"\r\n      (mouseover)=\"startPausing()\"\r\n      (mouseleave)=\"startPlayML()\"\r\n      (touchstart)=\"startPausing()\"\r\n      (touchend)=\"startPlayTE()\">\r\n\r\n      <div *ngIf=\"carouselLoaded\" class=\"owl-stage-outer\">\r\n        <owl-stage [owlDraggable]=\"{'isMouseDragable': owlDOMData?.isMouseDragable, 'isTouchDragable': owlDOMData?.isTouchDragable}\"\r\n                    [stageData]=\"stageData\"\r\n                    [slidesData]=\"slidesData\"></owl-stage>\r\n      </div> <!-- /.owl-stage-outer -->\r\n      <div class=\"owl-nav\" [ngClass]=\"{'disabled': navData?.disabled}\">\r\n        <div class=\"owl-prev\" [ngClass]=\"{'disabled': navData?.prev?.disabled}\" (click)=\"prev()\" [innerHTML]=\"navData?.prev?.htmlText\"></div>\r\n        <div class=\"owl-next\" [ngClass]=\"{'disabled': navData?.next?.disabled}\" (click)=\"next()\" [innerHTML]=\"navData?.next?.htmlText\"></div>\r\n      </div> <!-- /.owl-nav -->\r\n      <div class=\"owl-dots\" [ngClass]=\"{'disabled': dotsData?.disabled}\">\r\n        <div *ngFor=\"let dot of dotsData?.dots\" class=\"owl-dot\" [ngClass]=\"{'active': dot.active, 'owl-dot-text': dot.showInnerContent}\" (click)=\"moveByDot(dot.id)\">\r\n          <span [innerHTML]=\"dot.innerContent\"></span>\r\n        </div>\r\n      </div> <!-- /.owl-dots -->\r\n    </div> <!-- /.owl-carousel owl-loaded -->\r\n  `,\r\n  styles: [`.owl-theme { display: block; }`],\r\n  providers: [ NavigationService, AutoplayService, CarouselService ]\r\n})\r\nexport class CarouselComponent\r\n  implements OnInit, AfterContentChecked, AfterContentInit, OnDestroy {\r\n  @ContentChildren(CarouselSlideDirective)\r\n  slides: QueryList<CarouselSlideDirective>;\r\n\r\n  @Output() translated = new EventEmitter<SlidesOutputData>();\r\n\r\n  /**\r\n   * Width of carousel window (tag with class .owl-carousel), in wich we can see moving sliders\r\n   */\r\n  carouselWindowWidth: number;\r\n\r\n  /**\r\n   * Subscription to 'resize' event\r\n   */\r\n  resizeSubscription: Subscription;\r\n\r\n  /**\r\n   * Subscription merge Observable, which merges all Observables in the component except 'resize' Observable\r\n   */\r\n  private _allObservSubscription: Subscription;\r\n\r\n  /**\r\n   * Current settings for the carousel.\r\n   */\r\n  owlDOMData: OwlDOMData;\r\n\r\n  /**\r\n   * Data of owl-stage\r\n   */\r\n\tstageData: StageData;\r\n\r\n\t/**\r\n\t *  Data of every slide\r\n\t */\r\n  slidesData: SliderModel[];\r\n\r\n  /**\r\n\t * Data of navigation block\r\n\t */\r\n\tnavData: NavData;\r\n\r\n\t/**\r\n\t * Data of dots block\r\n\t */\r\n  dotsData: DotsData;\r\n\r\n  /**\r\n   * Data, wich are passed out of carousel after ending of transioning of carousel\r\n   */\r\n  slidesOutputData: SlidesOutputData;\r\n\r\n  /**\r\n   * Shows whether carousel is loaded of not.\r\n   */\r\n  carouselLoaded = false;\r\n\r\n  /**\r\n   * User's options\r\n   */\r\n  @Input() options: OwlOptions;\r\n\r\n  /**\r\n   * Observable for getting current View Settings\r\n   */\r\n  private _viewCurSettings$: Observable<CarouselCurrentData>;\r\n\r\n  /**\r\n   * Observable for catching the end of transition of carousel\r\n   */\r\n  private _translatedCarousel$: Observable<string>;\r\n\r\n  /**\r\n   * Observable for merging all Observables and creating one subscription\r\n   */\r\n  private _carouselMerge$: Observable<CarouselCurrentData | string>;\r\n\r\n  constructor(\r\n    private el: ElementRef,\r\n    private resizeService: ResizeService,\r\n    private carouselService: CarouselService,\r\n    private navigationService: NavigationService,\r\n    private autoplayService: AutoplayService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.spyDataStreams();\r\n\r\n    this.carouselWindowWidth = this.el.nativeElement.querySelector(\r\n      '.owl-carousel'\r\n    ).clientWidth;\r\n  }\r\n\r\n  ngAfterContentChecked() {\r\n  }\r\n  // ngAfterContentChecked() END\r\n\r\n  ngAfterContentInit() {\r\n    this.carouselService.setup(this.carouselWindowWidth, this.slides.toArray(), this.options);\r\n    this.carouselService.initialize(this.slides.toArray());\r\n\r\n    this._winResizeWatcher();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.resizeSubscription) {\r\n      this.resizeSubscription.unsubscribe();\r\n    }\r\n\r\n    this._allObservSubscription.unsubscribe();\r\n  }\r\n\r\n  /**\r\n   * Joins the observable login in one place: sets values to some observables, merges this observables and\r\n   * subcribes to merge func\r\n   */\r\n  spyDataStreams() {\r\n    this._viewCurSettings$ = this.carouselService.getViewCurSettings().pipe(\r\n      tap(data => {\r\n        this.owlDOMData = data.owlDOMData;\r\n        this.stageData = data.stageData;\r\n        this.slidesData = data.slidesData;\r\n        if (!this.carouselLoaded) {\r\n          this.carouselLoaded = true;\r\n        }\r\n        this.navData = data.navData;\r\n        this.dotsData = data.dotsData;\r\n      })\r\n    );\r\n\r\n    this._translatedCarousel$ = this.carouselService.getTranslatedState().pipe(\r\n      tap(() => {\r\n        this.gatherTranslatedData();\r\n        this.translated.emit(this.slidesOutputData);\r\n        this.slidesOutputData = {};\r\n      })\r\n    );\r\n\r\n    this._carouselMerge$ = merge(this._viewCurSettings$, this._translatedCarousel$);\r\n    this._allObservSubscription = this._carouselMerge$.subscribe(() => {});\r\n  }\r\n\r\n  /**\r\n   * Init subscription to resize event and attaches handler for this event\r\n   */\r\n  private _winResizeWatcher() {\r\n    if (Object.keys(this.carouselService._options.responsive).length) {\r\n      this.resizeSubscription = this.resizeService.onResize$\r\n        .pipe(\r\n          filter(() => this.carouselWindowWidth !== this.el.nativeElement.querySelector('.owl-carousel').clientWidth),\r\n          delay(this.carouselService.settings.responsiveRefreshRate)\r\n        )\r\n        .subscribe(() => {\r\n          this.carouselService.onResize(this.el.nativeElement.querySelector('.owl-carousel').clientWidth);\r\n          this.carouselWindowWidth = this.el.nativeElement.querySelector('.owl-carousel').clientWidth;\r\n        });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handler for transitioend event\r\n   */\r\n  onTransitionEnd() {\r\n    this.carouselService.onTransitionEnd();\r\n  }\r\n\r\n  /**\r\n   * Handler for click event, attached to next button\r\n   */\r\n  next() {\r\n    this.navigationService.next(this.carouselService.settings.navSpeed);\r\n  }\r\n\r\n  /**\r\n   * Handler for click event, attached to prev button\r\n   */\r\n  prev() {\r\n    this.navigationService.prev(this.carouselService.settings.navSpeed);\r\n  }\r\n\r\n  /**\r\n   * Handler for click event, attached to dots\r\n   */\r\n  moveByDot(dotId: string) {\r\n    this.navigationService.moveByDot(dotId);\r\n  }\r\n\r\n  /**\r\n   * Gathers and prepares data intended for passing to the user by means of firing event translatedCarousel\r\n   */\r\n  gatherTranslatedData() {\r\n    let startPosition: number;\r\n    const activeSlides: SliderModel[] = this.slidesData\r\n      .filter(slide => slide.active === true)\r\n      .map(slide => {\r\n        const id = slide.id.indexOf('cloned-') >= 0 ? slide.id.slice(7) : slide.id;\r\n        return {\r\n          id: id,\r\n          width: slide.width,\r\n          marginL: slide.marginL,\r\n          marginR: slide.marginR,\r\n          center: slide.center\r\n        }\r\n      });\r\n    startPosition = this.slides.toArray().findIndex(slide => slide.id === activeSlides[0].id);\r\n    this.slidesOutputData = {\r\n      startPosition: startPosition,\r\n      slides: activeSlides\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Starts pausing\r\n   */\r\n  startPausing() {\r\n    this.autoplayService.startPausing();\r\n  }\r\n\r\n  /**\r\n   * Starts playing after mouse leaves carousel\r\n   */\r\n  startPlayML() {\r\n    this.autoplayService.startPlayingMouseLeave();\r\n  }\r\n\r\n  /**\r\n   * Starts playing after touch ends\r\n   */\r\n  startPlayTE() {\r\n    this.autoplayService.startPlayingTouchEnd();\r\n  }\r\n\r\n}\r\n","import { Component, NgZone, ElementRef, HostListener, Renderer2, OnInit, OnDestroy, Input } from '@angular/core';\r\nimport { CarouselService, Coords } from '../../services/carousel.service';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport { first } from 'rxjs/operators';\r\nimport { StageData } from '../../models/stage-data.model';\r\nimport { SliderModel } from '../../models/slider.model';\r\n\r\n@Component({\r\n  selector: 'owl-stage',\r\n  template: `\r\n    <div>\r\n      <div class=\"owl-stage\" [ngStyle]=\"{'width': stageData.width + 'px',\r\n                                        'transform': stageData.transform,\r\n                                        'transition': stageData.transition,\r\n                                        'padding-left': stageData.paddingL + 'px',\r\n                                        'padding-right': stageData.paddingR + 'px' }\"\r\n          (transitionend)=\"onTransitionEnd()\">\r\n        <ng-container *ngFor=\"let slide of slidesData; let i = index\">\r\n          <div class=\"owl-item\" [ngClass]=\"{'active': slide.active, \r\n                                            'center': slide.center,\r\n                                            'cloned': slide.cloned}\" \r\n                                [ngStyle]=\"{'width': slide.width + 'px',\r\n                                            'margin-left': slide.marginL + 'px',\r\n                                            'margin-right': slide.marginR + 'px'}\">\r\n            <ng-template [ngTemplateOutlet]=\"slide.tplRef\"></ng-template>\r\n          </div><!-- /.owl-item -->\r\n        </ng-container>\r\n      </div><!-- /.owl-stage -->\r\n    </div>\r\n  `\r\n})\r\nexport class StageComponent implements OnInit, OnDestroy {\r\n  /**\r\n   * Object with settings which make carousel draggable by touch or mouse\r\n   */\r\n  @Input() owlDraggable: {\r\n    isMouseDragable: boolean,\r\n    isTouchDragable: boolean\r\n  };\r\n\r\n  /**\r\n   * Data of owl-stage\r\n   */\r\n  @Input() stageData: StageData;\r\n\r\n\t/**\r\n\t *  Data of every slide\r\n\t */\r\n  @Input() slidesData: SliderModel[];\r\n\r\n  /**\r\n   * Function wich will be returned after attaching listener to 'mousemove' event\r\n   */\r\n  listenerMouseMove: () => void;\r\n  /**\r\n   * Function wich will be returned after attaching listener to 'touchmove' event\r\n   */\r\n  listenerTouchMove: () => void;\r\n  /**\r\n   * Function wich will be returned after attaching listener to 'mousemove' event\r\n   */\r\n  listenerOneMouseMove: () => void;\r\n  /**\r\n   * Function wich will be returned after attaching listener to 'touchmove' event\r\n   */\r\n  listenerOneTouchMove: () => void;\r\n\r\n  /**\r\n   * Function wich will be returned after attaching listener to 'mouseup' event\r\n   */\r\n  listenerMouseUp: () => void;\r\n  /**\r\n   * Function wich will be returned after attaching listener to 'touchend' event\r\n   */\r\n  listenerTouchEnd: () => void;\r\n\r\n  /**\r\n   * Function wich will be returned after attaching listener to 'click' event\r\n   */\r\n  listenerOneClick: () => void;\r\n\r\n  /**\r\n   * Object with data needed for dragging\r\n   */\r\n  private _drag: any = {\r\n    time: null,\r\n    target: null,\r\n    pointer: null,\r\n    stage: {\r\n      start: null,\r\n      current: null\r\n    },\r\n    direction: null,\r\n    active: false,\r\n    moving: false\r\n  };\r\n\r\n  /**\r\n   * Subject for notification when the carousel's rebuilding caused by resize event starts\r\n   */\r\n  private _oneDragMove$ = new Subject<any>();\r\n\r\n  /**\r\n   * Subsctiption to _oneDragMove$ Subject\r\n   */\r\n  private _oneMoveSubsription: Subscription;\r\n\r\n  constructor(private zone: NgZone,\r\n              private el: ElementRef,\r\n              private renderer: Renderer2,\r\n              private carouselService: CarouselService) { }\r\n\r\n  @HostListener('mousedown', ['$event']) onMouseDown(event) {\r\n    if (this.owlDraggable.isMouseDragable) {\r\n      this._onDragStart(event);\r\n    }\r\n  }\r\n\r\n  @HostListener('touchstart', ['$event']) onTouchStart(event) {\r\n    if (this.owlDraggable.isTouchDragable) {\r\n      this._onDragStart(event);\r\n    }\r\n  }\r\n\r\n  @HostListener('touchcancel', ['$event']) onTouchCancel(event) {\r\n    this._onDragEnd(event);\r\n  }\r\n\r\n  @HostListener('dragstart') onDragStart() {\r\n    if (this.owlDraggable.isMouseDragable) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  @HostListener('selectstart') onSelectStart() {\r\n    if (this.owlDraggable.isMouseDragable) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this._oneMoveSubsription = this._oneDragMove$\r\n      .pipe(first())\r\n      .subscribe(() => {\r\n        this._sendChanges();\r\n      });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._oneMoveSubsription.unsubscribe();\r\n  }\r\n\r\n  /**\r\n   * Passes this to _oneMouseTouchMove();\r\n   */\r\n  bindOneMouseTouchMove = (ev) => {\r\n    this._oneMouseTouchMove(ev);\r\n  }\r\n\r\n  /**\r\n   * Passes this to _onDragMove();\r\n   */\r\n  bindOnDragMove = (ev) => {\r\n    this._onDragMove(ev);\r\n  }\r\n\r\n  /**\r\n   * Passes this to _onDragMove();\r\n   */\r\n  bindOnDragEnd = (ev) => {\r\n    // this.zone.run(() => {\r\n      this._onDragEnd(ev);\r\n    // });\r\n  }\r\n\r\n  /**\r\n\t * Handles `touchstart` and `mousedown` events.\r\n\t * @todo Horizontal swipe threshold as option\r\n\t * @todo #261\r\n\t * @param event - The event arguments.\r\n\t */\r\n\tprivate _onDragStart(event): any {\r\n\t\tlet stage: Coords = null;\r\n\r\n\t\tif (event.which === 3) {\r\n\t\t\treturn;\r\n    }\r\n\r\n    stage = this._prepareDragging(event);\r\n\r\n\t\tthis._drag.time = new Date().getTime();\r\n\t\tthis._drag.target = event.target;\r\n\t\tthis._drag.stage.start = stage;\r\n\t\tthis._drag.stage.current = stage;\r\n    this._drag.pointer = this._pointer(event);\r\n    this._drag.active = true;\r\n\r\n    this.listenerMouseUp = this.renderer.listen(document, 'mouseup', this.bindOnDragEnd);\r\n    this.listenerTouchEnd = this.renderer.listen(document, 'touchend', this.bindOnDragEnd);\r\n\r\n    this.zone.runOutsideAngular(() => {\r\n      this.listenerOneMouseMove = this.renderer.listen(document, 'mousemove', this.bindOneMouseTouchMove);\r\n      this.listenerOneTouchMove = this.renderer.listen(document, 'touchmove', this.bindOneMouseTouchMove);\r\n    });\r\n\r\n  }\r\n\r\n  /**\r\n   * Attaches listeners to `touchmove` and `mousemove` events; initiates updating carousel after starting dragging\r\n   * @param event event objech of mouse or touch event\r\n   */\r\n  private _oneMouseTouchMove(event) {\r\n    if (!this._drag.active) return false;\r\n    const delta = this._difference(this._drag.pointer, this._pointer(event));\r\n\r\n    this.listenerOneMouseMove();\r\n    this.listenerOneTouchMove();\r\n\r\n    if (Math.abs(delta.x) < Math.abs(delta.y) && this._is('valid')) {\r\n      this._drag.active = false;\r\n      return;\r\n    }\r\n    this._drag.moving = true;\r\n\r\n    this.listenerMouseMove = this.renderer.listen(document, 'mousemove', this.bindOnDragMove);\r\n    this.listenerTouchMove = this.renderer.listen(document, 'touchmove', this.bindOnDragMove);\r\n\r\n    event.preventDefault();\r\n\r\n    this._enter('dragging');\r\n    // this.carouselService._trigger('drag');\r\n    this._oneDragMove$.next(event);\r\n    // this._sendChanges();\r\n  }\r\n\r\n  \t/**\r\n\t * Handles the `touchmove` and `mousemove` events.\r\n\t * @todo #261\r\n\t * @param event - The event arguments.\r\n\t */\r\n\tprivate _onDragMove(event) {\r\n    if (!this._drag.active) return false;\r\n\r\n    let stage: Coords;\r\n    const stageOrExit: boolean | Coords = this.carouselService.defineNewCoordsDrag(event, this._drag);\r\n\r\n    if (stageOrExit === false) {\r\n      return;\r\n    }\r\n    stage = stageOrExit as Coords;\r\n\r\n\t\tevent.preventDefault();\r\n\r\n    this._drag.stage.current = stage;\r\n\t\tthis._animate(stage.x - this._drag.stage.start.x);\r\n  };\r\n\r\n  /**\r\n   * Moves .owl-stage left-right\r\n   * @param coordinate coordinate to be set to .owl-stage\r\n   */\r\n  private _animate(coordinate: number) {\r\n    this.renderer.setStyle(this.el.nativeElement.children[0], 'transform', `translate3d(${coordinate}px,0px,0px`);\r\n    this.renderer.setStyle(this.el.nativeElement.children[0], 'transition', '0s');\r\n  }\r\n\r\n  /**\r\n\t * Handles the `touchend` and `mouseup` events.\r\n\t * @todo #261\r\n\t * @todo Threshold for click event\r\n\t * @param event - The event arguments.\r\n\t */\r\n\tprivate _onDragEnd(event) {\r\n    this.carouselService.owlDOMData.isGrab = false;\r\n\r\n    if (this._drag.moving) {\r\n      this.renderer.setStyle(this.el.nativeElement.children[0], 'transform', ``);\r\n      this.renderer.setStyle(this.el.nativeElement.children[0], 'transition', this.carouselService.speed(+this.carouselService.settings.dragEndSpeed || this.carouselService.settings.smartSpeed)/1000 +'s');\r\n\r\n      this._finishDragging(event);\r\n      this.listenerMouseMove();\r\n      this.listenerTouchMove();\r\n    }\r\n\r\n    this._drag = {\r\n      time: null,\r\n      target: null,\r\n      pointer: null,\r\n      stage: {\r\n        start: null,\r\n        current: null\r\n      },\r\n      direction: null,\r\n      active: false,\r\n      moving: false\r\n    };\r\n\r\n    // this.carouselService.trigger('dragged');\r\n    this.listenerMouseUp();\r\n    this.listenerTouchEnd();\r\n  };\r\n\r\n  /**\r\n\t * Prepares data for dragging carousel. It starts after firing `touchstart` and `mousedown` events.\r\n\t * @param event - The event arguments.\r\n\t * @returns stage - object with 'x' and 'y' coordinates of .owl-stage\r\n\t */\r\n  private _prepareDragging(event: any): Coords {\r\n    return this.carouselService.prepareDragging(event);\r\n  }\r\n\r\n  /**\r\n   * Attaches handler for 'click' event on any element in .owl-stage in order to prevent dragging when moving of cursor is less than 3px\r\n   */\r\n  private _oneClickHandler = () => {\r\n    this.listenerOneClick = this.renderer.listen(this._drag.target, 'click', () => false)\r\n    this.listenerOneClick();\r\n  }\r\n\r\n  /**\r\n   * Finishes dragging\r\n   * @param event object event of 'mouseUp' of 'touchend' events\r\n   */\r\n  private _finishDragging(event: any) {\r\n    this.carouselService.finishDragging(event, this._drag, this._oneClickHandler);\r\n  }\r\n\r\n  /**\r\n\t * Gets unified pointer coordinates from event.\r\n\t * @param event The `mousedown` or `touchstart` event.\r\n\t * @returns Contains `x` and `y` coordinates of current pointer position.\r\n\t */\r\n  private _pointer(event: any): any {\r\n    return this.carouselService.pointer(event);\r\n  }\r\n\r\n  /**\r\n\t * Gets the difference of two vectors.\r\n\t * @param first The first vector.\r\n\t * @param second- The second vector.\r\n\t * @returns The difference.\r\n\t */\r\n  private _difference(firstC: Coords, second: Coords): any {\r\n    return this.carouselService.difference(firstC, second);\r\n  }\r\n\r\n  /**\r\n\t * Checks whether the carousel is in a specific state or not.\r\n\t * @param state The state to check.\r\n\t * @returns The flag which indicates if the carousel is busy.\r\n\t */\r\n  private _is(state: string): boolean {\r\n    return this.carouselService.is(state);\r\n  }\r\n\r\n  /**\r\n  * Enters a state.\r\n  * @param name The state name.\r\n  */\r\n  private _enter(name: string) {\r\n    this.carouselService.enter(name);\r\n  }\r\n\r\n  /**\r\n\t * Sends all data needed for View.\r\n\t */\r\n  private _sendChanges() {\r\n    this.carouselService.sendChanges();\r\n  }\r\n\r\n  /**\r\n   * Handler for transitioend event\r\n   */\r\n  onTransitionEnd() {\r\n    this.carouselService.onTransitionEnd();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {\r\n  CarouselComponent,\r\n  CarouselSlideDirective\r\n} from './carousel.component';\r\nimport { WINDOW_PROVIDERS } from '../services/window-ref.service';\r\nimport { ResizeService } from '../services/resize.service';\r\nimport { DOCUMENT_PROVIDERS } from '../services/document-ref.service';\r\nimport { StageComponent } from './stage/stage.component';\r\n\r\nexport {\r\n  CarouselComponent,\r\n  CarouselSlideDirective,\r\n  SlidesOutputData\r\n} from './carousel.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [CarouselComponent, CarouselSlideDirective, StageComponent],\r\n  exports: [CarouselComponent, CarouselSlideDirective],\r\n  providers: [WINDOW_PROVIDERS, ResizeService, DOCUMENT_PROVIDERS]\r\n})\r\nexport class CarouselModule {}\r\n"]}